@model doorserve.Models.SparePartsPriceStockModel
@{
    Layout = null;    
}
@using (Html.BeginForm("AddSparePartsPriceandStock", "PurchaseProcurement", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
  
    <div class="col-md-8 col-sm-8 col-lg-8 col-xs-12">
        <div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.CatName, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.CatName, Model.CatNameList,"Select", new { @class = "form-control", onchange = "AjaxWithValue('BindSubCategoryJson', 'SubCatName', this)" })
                @Html.ValidationMessageFor(model => model.CatName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.SubCatName, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.SubCatName,Model.SubCatNameList,"Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubCatName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.Brand, Model.BrandList,"Select",new { @class = "form-control", onchange = "AjaxWithValue('BindModelNameJson', 'ProductName', this)"  })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.ProductName,Model.ProductNameList,"Select", new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.TRUPC, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.TRUPC, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TRUPC, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.SpareTypeName, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12"})
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.SpareTypeName, Model.SpareTypeNameList,"Select", new { @class = "form-control", onchange = "AjaxWithValue('BindSparePartNameJson', 'PartName', this)" })
                @Html.ValidationMessageFor(model => model.SpareTypeName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.PartName, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.PartName,Model.PartNameList,"Select", htmlAttributes: new { @class = "form-control",onchange="partNameCodeGenerate(this)" })
                @Html.ValidationMessageFor(model => model.PartName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.TGFGPartCode, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.TGFGPartCode, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TGFGPartCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.CTH_Number, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.CTH_Number, htmlAttributes: new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.CTH_Number, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.SpareCode, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.SpareCode, htmlAttributes: new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.SpareCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.EstimatedPrice, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.EstimatedPrice, htmlAttributes: new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.EstimatedPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.MarketPrice, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.MarketPrice, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MarketPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.SpareQty, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.SpareQty, htmlAttributes: new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.SpareQty, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>
                {
                    new SelectListItem {Text = "Yes", Value = "Yes"},
                    new SelectListItem {Text = "No", Value = "No"}

                }, "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="ln_solid"></div>
        <div class="form-group">
            <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                <button class="btn btn-primary" type="button">Cancel</button>
                <button class="btn btn-primary" type="reset">Reset</button>
                <button type="submit" class="btn btn-success">Submit</button>
            </div>
        </div>
    </div>
    <div class="col-md-4" style="margin-top: 40px;">
        <p>Spare Part Photo</p>
        <img src="" id="Part_Image" style="width:100px;height:100px;" />

    </div>
}
@if (ViewBag.SortOrder != null)
{
    <script>
        document.getElementById('SortOrder').value = '@ViewBag.SortOrder';

    </script>
}
