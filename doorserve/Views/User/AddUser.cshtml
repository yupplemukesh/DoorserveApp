@model doorserve.Models.UserModel
@{
    ViewBag.Title = "Add User";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<div class="panel-heading">
    <div class="row">
        <div class="col-lg-12">
            <div class="col-md-6">
                <h3 class="m-y-0">Add User </h3>
            </div>
        </div>
    </div>
</div>
<div class="panel-body">

    @using (Html.BeginForm("AddUser", "User", FormMethod.Post, new { id = "form", autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        <div class="x_content">
            <div class="col-md-12 col-sm-12 col-lg-12 col-xs-12">
                <div class="row" style="padding-bottom: 5px;">
                    @Html.Label("Region", htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.DropDownListFor(model => model.RegionId, Model.RegionList,"Select", htmlAttributes: new { @class = "form-control", tabindex = "1" })
                        @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px;">
                    <div class="col-md-3 col-md-offset-1 col-xs-12">
                        @Html.Label("Name")
                        <span class="error-alert">*</span>
                    </div>                 
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.ConFirstName, htmlAttributes: new { @class = "form-control", tabindex = "1" })
                        @Html.ValidationMessageFor(model => model.ConFirstName, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.UserId)
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px;">
                    <div class="col-md-3 col-md-offset-1 col-xs-12">
                        @Html.LabelFor(model => model.ConMobileNumber)
                        <span class="error-alert">*</span>
                    </div>                  
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.ConMobileNumber, htmlAttributes: new { @class = "form-control", @maxlength = "10", tabindex = "2" })
                        @Html.ValidationMessageFor(model => model.ConMobileNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px;">
                    <div class="col-md-3 col-md-offset-1 col-xs-12">
                        @Html.LabelFor(model => model.ConEmailAddress)
                        <span class="error-alert">*</span>
                    </div>                 
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.ConEmailAddress, htmlAttributes: new { @class = "form-control", tabindex = "3" })
                        @Html.ValidationMessageFor(model => model.ConEmailAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px;">
                    <div class="col-md-3 col-md-offset-1 col-xs-12">
                        @Html.LabelFor(model => model.UserName)
                        <span class="error-alert">*</span>
                    </div>                   
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.UserName, htmlAttributes: new { @class = "form-control", tabindex = "4" })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px;">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12", autocomplete = "off" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.Password, htmlAttributes: new { @type = "password", @class = "form-control", tabindex = "5", autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px;">
                    @Html.Label("Confirm Password", htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.ConfirmPassword, htmlAttributes: new { @type = "password", @class = "form-control", tabindex = "6" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px;">
                    <div class="col-md-3 col-md-offset-1 col-xs-12">
                        @Html.LabelFor(model => model.PinNumber)
                        <span class="error-alert">*</span>
                    </div>                    
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.PinNumber, htmlAttributes: new { @class = "form-control", onblur = "GetLocation()", tabindex = "7", id = "Pincode" })
                        @Html.ValidationMessageFor(model => model.PinNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row" style="padding-bottom: 5px;">
                    <div class="col-md-3 col-md-offset-1 col-xs-12">
                        @Html.LabelFor(model => model.LocationId)
                        <span class="error-alert">*</span>
                    </div>                   
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.DropDownListFor(model => model.LocationId, Model.LocationList, "Select", htmlAttributes: new { @class = "form-control", id = "LocationId" })
                        @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px;">
                    @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.District, htmlAttributes: new { @class = "form-control", id = "District", @readonly = "readonly", tabindex = "8" })
                        @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px;">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.State, htmlAttributes: new { @class = "form-control", id = "State", @readonly = "readonly", tabindex = "9" })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row" style="padding-bottom: 5px;">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.Address, htmlAttributes: new { @class = "form-control", tabindex = "10" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px;">
                    @Html.Label("Address Type", htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">

                        Home
                        @Html.RadioButtonFor(model => model.AddressTypeId, 1, new { @checked = "checked" })
                        Work
                        @Html.RadioButtonFor(model => model.AddressTypeId, 2)
                        Other
                        @Html.RadioButtonFor(model => model.AddressTypeId, 3)
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px;">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    @Html.CheckBoxFor(model => model.IsActive, new { @checked = "checked" })
                </div>
                <div class="ln_solid"></div>
                <div class="form-group">
                    <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">

                        <button class="btn btn-primary" type="reset">Reset</button>
                        <button type="submit" class="btn btn-success">Submit</button>
                    </div>
                </div>
            </div>
        </div>

    }
</div>
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
<script>

     function GetLocation() {
        var Id = $("#Pincode").val();
            if (Id.length == 6) {
                $.ajax({
                    url: "/DropdownBind/GetLocationByPinCode",
                    async: true,
                    type: "GET",
                    data: { pin: Id },
                    success: function (result) {
                        $("#State").val('');                           
                        $("#District").val('');
                        var obj = { value: Id, Other: result.LocationId};
                        AjaxWithValue('BindLocationByPinCodeJson', 'LocationId', obj);
                    }
                });
            }
        };
       $("#LocationId").change(function (e) {
                  var locationId = $(this).val();
        if (locationId != '')
            BindAddressByLocation(locationId);
        else {
                          $("#District").val('');
                          $("#Country").val('');    
                          $("#State").val('');
        }

       })
        function AjaxWithValue(method, ddl, e) {
        var val = e.value;

        $.ajax({
            type: "GET",
            url: "/DropdownBind/" + method + "?value=" + val,
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $("#" + ddl).empty();

                //var sel = new Option('-Select-', '');
                //$('#' + ddl).append(sel);
                for (var i = 0; i < data.length; i++) {
                    var opt = new Option(data[i].Text, data[i].Value);
                    $('#' + ddl).append(opt);
                }
            }
        });
    }
            function BindAddressByLocation(locationId) {
                  $.ajax({
                      type: "GET",
                      url: '@Url.Action("BindLocationByLocationIdJson","DropdownBind")',
                      data: {"value": locationId},
                      contentType: "application/json; charset=utf-8",
                      dataType: "json",
                      async: true,
                      success: function (data) {
                          $("#District").val(data.DistrictName);
                          $("#State").val(data.StateName);
                      }
                  });
              }
    </script>
}