@model doorserve.Models.EsclatedCallsViewModel
@using doorserve.Models
@using GridMvc.Html
@{
    ViewBag.Title = "Escalate Calls";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
    var count = 0;
    string par = "A";
    if (Model.Type == 'A')
    {
        par = "AP";
    }
    else if (Model.Type == 'C')
    {
        par = "CL";
    }

}
<div class="panel-heading">
    <div class="row">
        <div class="col-md-6"><h3 class="m-y-0">Escalate Calls</h3></div>
        <div class="col-md-6  add-tem-btn-mar-top">
            <div class="panel-tools">
                @if (Permissions.Rights.ExcelExport)
                {
                    using (Html.BeginForm("ExportToExcel", "PendingCalls", FormMethod.Get))
                    {
                        @Html.Hidden("tabIndex", Model.Type)
                        <button type="submit" class="tools-icon btn btn-primary btn-sm excel"> Export to Excel</button>
                    }
                }
            </div>
        </div>
    </div>
    @using (Html.BeginForm("EscalateCalls", "PendingCalls", FormMethod.Get))
    {
        <div class="row form-group">
            <div class="col-md-2">
                Search By:
            </div>
            <div class="col-md-4">
                @Html.RadioButtonFor(x => x.Type, "A") Approval
                @Html.RadioButtonFor(x => x.Type, "C") Cancelled
                @Html.RadioButtonFor(x => x.Type, "E") Escalated
            </div>
            <div class="col-md-2">
                <button type="submit" class="tools-icon btn btn-primary btn-sm"> Search</button>
            </div>
        </div>
    }
</div>
<div class="row">
    <div class="col-md-12">
        @if (Permissions.Rights.View)
        {
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-12">

                        <div class="panel panel-default panel-table">

                            <div class="panel-body">
                                <div class="table-responsive for-popup-height">
                                    <div class="code-cut">
                                        @Html.Grid(Model.Calls).Columns(columns =>
                                   {

                                   columns.Add()
                                       .Titled("#SLN")
                                       .SetWidth(10)
                                       .RenderValueAs(o =>
                                       {
                                       count++;
                                       return @<text> @count </text>;
});
columns.Add(c => c.CreatedOn).Titled("Call Date").Filterable(true).Format("{0:dd-MM-yyyy}");
columns.Add(model => model.CRN).Titled("Call Id")
.Filterable(true).Sanitized(false).Encoded(false).
RenderValueAs(model => Html.ActionLink(model.CRN, "ManageServiceProvidersDetails", "ServiceCenter", new { CRN = model.CRN, Param = par }, null));
columns.Add(c => c.IsRepeat).Titled("Is Repeat Call").Filterable(true);
columns.Add(c => c.Status).Titled("Status").Filterable(true);
columns.Add(c => c.ClientName).Titled("Client Name").Filterable(true);
columns.Add(c => c.ProcessName).Titled("Process Name").Filterable(true);
columns.Add(c => c.DataSource).Titled("Data Source").Filterable(true);
columns.Add(c => c.ServiceTypeName).Titled("Service Type").Filterable(true);
columns.Add(c => c.DeliveryTypeName).Titled("Service Delivery Type").Filterable(true);
columns.Add(c => c.CustomerName).Titled("Customer Name").Filterable(true);
columns.Add(c => c.CustomerContactNumber).Titled("Customer Mob").Filterable(true);
columns.Add(c => c.CustomerEmail).Titled("Customer E-mail").Filterable(true);
columns.Add(c => c.CustomerAddress).Titled("Address").Filterable(true);
columns.Add(c => c.CustomerCity).Titled("Location").Filterable(true);
columns.Add(c => c.CustomerPincode).Titled("PinCode").Filterable(true);
columns.Add(c => c.DeviceCategory).Titled("Device Category").Filterable(true);
columns.Add(c => c.DeviceBrand).Titled("Device Brand").Filterable(true);
columns.Add(c => c.DeviceModel).Titled("Device Model").Filterable(true);
columns.Add(c => c.DOP).Titled("Device DOP").Filterable(true);
columns.Add(c => c.PurchaseFrom).Titled("Device Purchase Form").Filterable(true);
}).WithPaging(10).Sortable(true)
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@section scripts{
    <script>
        $('input[type=radio][name="Type"]').change(function () {
           $("#tabIndex").val($(this).val())
        });

    </script>
}