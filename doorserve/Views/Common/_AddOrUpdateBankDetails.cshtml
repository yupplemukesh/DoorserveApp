@model doorserve.Models.BankDetailModel
@Html.HiddenFor(x => x.RefKey)
@Html.HiddenFor(x => x.bankId)
@Html.HiddenFor(x => x.EventAction)
@Html.HiddenFor(x => x.BankCancelledChequeFileName)


<div class="form-group">
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="control-label">
                    @Html.LabelFor(model => model.BankNameId)
                    <span class="error-alert">*</span>
                </div>                
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.DropDownListFor(model => model.BankNameId, Model.BankList, "Select", new { @class = "form-control" })

                </div>
                @Html.ValidationMessageFor(model => model.BankNameId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="control-label">
                    @Html.LabelFor(model => model.BankAccountNumber)
                    <span class="error-alert">*</span>
                </div>               
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.TextBoxFor(model => model.BankAccountNumber, htmlAttributes: new { @class = "form-control", placeholder = "Bank Account Number" })

                </div>
                @Html.ValidationMessageFor(model => model.BankAccountNumber, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>
<div class="form-group">
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="control-label">
                    @Html.LabelFor(model => model.BankCompanyName)
                    <span class="error-alert">*</span>
                </div>                
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.TextBoxFor(model => model.BankCompanyName, htmlAttributes: new { @class = "form-control", placeholder = "Company Name at Bank Account" })

                </div>
                @Html.ValidationMessageFor(model => model.BankCompanyName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="control-label">
                    @Html.LabelFor(model => model.BankIFSCCode)
                    <span class="error-alert">*</span>
                </div>               
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.TextBoxFor(model => model.BankIFSCCode, htmlAttributes: new { @class = "form-control input-md", placeholder = "IFSC Code" })

                </div>
                @Html.ValidationMessageFor(model => model.BankIFSCCode, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>
<div class="form-group">
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.BankBranchName, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.TextBoxFor(model => model.BankBranchName, htmlAttributes: new { @class = "form-control", placeholder = "Bank Branch" })

                </div>
                @Html.ValidationMessageFor(model => model.BankBranchName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5 col-sm-5 col-xs-12">
                @Html.LabelFor(model => model.BankCancelledChequeFilePath, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.TextBoxFor(model => model.BankCancelledChequeFilePath, htmlAttributes: new { @type = "file", @class = "form-control", accept = "image/*", @onchange = "readURL1(this);" })

                </div>
                @Html.ValidationMessageFor(model => model.BankCancelledChequeFilePath, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-1 col-sm-1">
                @*<img src="~/Content/img/icon-img/doc-icon.png" id="conBankImg" class="a thumb-Img" style="pointer-events: none;">*@
                @if (!string.IsNullOrEmpty(Model.BankCancelledChequeFileUrl))
                {
                    <img id="blah" src="@Model.BankCancelledChequeFileUrl" class="thumb-Img" alt="your image" />
                }
                else
                {
                    <img id="blah" src="~/Content/img/icon-img/doc-icon.png" class="thumb-Img" alt="your image" />
                }
            </div>

        </div>
    </div>
</div>
<div class="form-group row">
    <div class="col-md-12">
        <label class="col-sm-3 control-label" for="form-control-1">Is Default ?</label>
        <div class="col-sm-9">
            @Html.CheckBoxFor(model => model.IsDefault, new { @checked = "checked" })
        </div>
        </div>
    </div>



