@model TogoFogo.Models.ManageCourierModel
@{
    Layout = null;
}

<div class="form-group">
    @Html.HiddenFor(x => x.CourierId)
    @Html.HiddenFor(x => x.UploadedCourierFile)
    @Html.HiddenFor(x => x.UploadedGSTFile)
    @Html.HiddenFor(x => x.AadhaarCardFile)
    @Html.HiddenFor(x => x.PANCardFile)
    @Html.HiddenFor(x => x.AadhaarCardFile)
    @Html.HiddenFor(x => x.AgreementScanFile)
    @Html.HiddenFor(x => x.VoterIDFile)
    @Html.HiddenFor(x => x.CancelledChequeFile)
    <div class="row">

        <div class="col-md-6">
            <p style="font-size: 18px;"><u>Settings</u></p>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.CourierName, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.CourierName, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.CourierName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.CourierCode, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.CourierCode, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.CourierCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.CourierBrandName, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.CourierBrandName, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.CourierBrandName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Priority, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.CourierTAT, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.CourierTAT, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.CourierTAT, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.AWBNumber, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.AWBNumber, Model.AWBNumberUsedList, "Select", htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.AWBNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.CountryId, Model.CountryList, htmlAttributes: new { @class = "form-control", onchange = "AjaxWithValue('BindStateJson', 'StateId', this)" })
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.Label("State", htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.StateId, Model.StateList, new { @class = "form-control", onchange = "AjaxWithValue('BindLocationJson', 'CityId', this)" })
                    @Html.ValidationMessageFor(model => model.StateDropdown, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.Label("City", htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.CityId, Model.CityList, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.CityDropdown, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.UploadedCourierFile, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-5 col-sm-5 col-xs-12">
                    @Html.TextBoxFor(model => model.UploadedCourierFilePath, htmlAttributes: new { @type = "file", @class = "form-control", @onchange = "readURL(this);", accept = "image/*" })
                    @Html.ValidationMessageFor(model => model.UploadedCourierFilePath, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @if (!string.IsNullOrEmpty(Model.UploadedCourierFileUrl))
                    {
                        <img id="blah" src="@Model.UploadedCourierFileUrl" width="40" height="40" alt="your image" />
                    }
                    else
                    {
                        <img id="blah" src="~/Images/male-user-add.png" width="40" height="40" alt="your image" />
                    }
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.IsReverse, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.CheckBoxFor(model => model.IsReverse)
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.IsAllowPreference, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.CheckBoxFor(model => model.IsAllowPreference)
                </div>
            </div>

        </div>

    </div>
    <div class="row">
        <div class="col-md-6">
            <p style="font-size: 18px;"><u>Organization</u></p>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.CourierCompanyName, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.CourierCompanyName, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.CourierCompanyName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.OrganizationCode, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.OrganizationCode, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.OrganizationCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.StatutoryType, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.StatutoryType, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.StatutoryType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.ApplicableTaxType, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.ApplicableTaxType, Model.ApplicableTaxTypeList, "Select", htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.ApplicableTaxType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.GSTNumber, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.GSTNumber, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.GSTNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.UploadedGSTFile, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.UploadedGSTFilePath, htmlAttributes: new { @type = "file", @class = "form-control", @onchange = "readURL(this);", accept = "image/*" })
                    @Html.ValidationMessageFor(model => model.UploadedGSTFilePath, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @if (!string.IsNullOrEmpty(Model.UploadedGSTFileUrl))
                    {
                        <img id="blah" src="@Model.UploadedGSTFileUrl" width="40" alt="your image" />
                    }
                    else
                    {
                        <img id="blah" src="~/Images/male-user-add.png" width="40" alt="your image" />
                    }
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.PANCardNumber, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.PANCardNumber, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.PANCardNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.PANCardFile, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.PANCardFilePath, htmlAttributes: new { @type = "file", @class = "form-control", @onchange = "readURL(this);", accept = "image/*" })
                    @Html.ValidationMessageFor(model => model.PANCardFilePath, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @if (!string.IsNullOrEmpty(Model.UserPANCardFileUrl))
                    {
                        <img id="blah" src="@Model.UserPANCardFileUrl" width="40" height="40" alt="your image" />
                    }
                    else
                    {
                        <img id="blah" src="~/Images/male-user-add.png" width="40" height="40" alt="your image" />
                    }
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.BikeMakeandModel, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.BikeMakeandModel, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.BikeMakeandModel, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.BikeNumber, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.BikeNumber, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.BikeNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <p style="font-size: 18px;padding-bottom:5px"><u>Service Charge</u></p>

            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.SC_CountryDropdown, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.SC_CountryDropdown, Model.CountryList, htmlAttributes: new { @class = "form-control", onchange = "AjaxWithValue('BindPinCodeByCountry', 'SC_PincodeDropdown', this)" })
                    @Html.ValidationMessageFor(model => model.SC_CountryDropdown, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.SC_PincodeDropdown, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.SC_PincodeDropdown, Model.PincodeList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SC_PincodeDropdown, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Currency, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.ServiceChargeType, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.ServiceChargeType, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ServiceChargeType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.ValueRange, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.ValueRange, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ValueRange, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.WeightRange, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-8 col-sm-4 col-xs-12">
                    <div class="row">
                        <label class="col-md-2 col-sm-2 col-xs-2">From</label>
                        <div class="col-md-3 col-sm-4 col-xs-4">
                            @Html.TextBoxFor(model => model.WeightRange1, null, htmlAttributes: new { @class = "form-control" })
                        </div>
                        <label class="col-md-1 col-sm-2 col-xs-2">To</label>
                        <div class="col-md-3 col-sm-4 col-xs-4">
                            @Html.TextBoxFor(model => model.WeightRange2, null, htmlAttributes: new { @class = "form-control" })
                        </div>

                    </div>
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.Volume, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-8 col-sm-4 col-xs-12">
                    <div class="row">
                        <label class="col-md-2 col-sm-2 col-xs-2">From</label>
                        <div class="col-md-3 col-sm-4 col-xs-4">
                            @Html.TextBoxFor(model => model.Volumn1, null, htmlAttributes: new { @class = "form-control" })
                        </div>
                        <label class="col-md-1 col-sm-2 col-xs-2">To</label>
                        <div class="col-md-3 col-sm-4 col-xs-4">
                            @Html.TextBoxFor(model => model.Volumn2, null, htmlAttributes: new { @class = "form-control" })
                        </div>

                    </div>
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.ServiceCharge, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.ServiceCharge, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ServiceCharge, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.ApplicableFromDate, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.ApplicableFromDate,null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ApplicableFromDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.ItemType, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.CheckBoxFor(model => model.ItemType)

                </div>
            </div>
        </div>
        <div class="col-md-6">
            <p style="font-size: 18px;padding-bottom:5px"><u>Address and Contact Person</u></p>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.PersonAddresstype, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.PersonAddresstype, Model.PersonAddressTypeList, "Select", htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.PersonAddresstype, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.PersonCountryDropdown, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.PersonCountryDropdown, Model.CountryList, htmlAttributes: new { @class = "form-control", onchange = "AjaxWithValue('BindStateJson', 'PersonStateDropdown', this)" })
                    @Html.ValidationMessageFor(model => model.PersonCountryDropdown, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.PersonStateDropdown, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.PersonStateDropdown, Model.StateList, new { @class = "form-control", onchange = "AjaxWithValue('BindLocationJson', 'PersonCityDropdown', this)" })
                    @Html.ValidationMessageFor(model => model.PersonStateDropdown, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.PersonCityDropdown, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.PersonCityDropdown, Model.CityList, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.PersonCityDropdown, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.FullAddress, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.FullAddress, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.FullAddress, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.Locality, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Locality, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.Locality, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.NearByLocation, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.NearByLocation, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.NearByLocation, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Pincode, htmlAttributes: new { @class = "form-control", placeholder = "", maxlength = "6" })
                    @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.FirstName, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.LastName, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.MobileNumber, htmlAttributes: new { @class = "form-control", placeholder = "", minlength = "10", maxlength = "10" })
                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.EmailAddress, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.UserPANCard, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.UserPANCard, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.UserPANCard, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.UserPANCardFile, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.UserPANCardFilePath, htmlAttributes: new { @type = "file", @class = "form-control", @onchange = "readURL(this);", accept = "image/*" })
                    @Html.ValidationMessageFor(model => model.UserPANCardFilePath, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @if (!string.IsNullOrEmpty(Model.UserPANCardFileUrl))
                    {
                        <img id="blah" src="@Model.UserPANCardFileUrl" width="40" height="40" alt="your image" />
                    }
                    else
                    {
                        <img id="blah" src="~/Images/male-user-add.png" width="40" height="40" alt="your image" />
                    }
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.VoterIDCardNo, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.VoterIDCardNo, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.VoterIDCardNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.VoterIDFile, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.VoterIDFilePath, htmlAttributes: new { @type = "file", @class = "form-control", @onchange = "readURL(this);", accept = "image/*" })
                    @Html.ValidationMessageFor(model => model.VoterIDFilePath, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @if (!string.IsNullOrEmpty(Model.VoterIDFileUrl))
                    {
                        <img id="blah1" src="@Model.VoterIDFileUrl" width="40" height="40" alt="your image" />
                    }
                    else
                    {
                        <img id="blah" src="~/Images/male-user-add.png" width="40" height="40" alt="your image" />
                    }
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.AadhaarCardNo, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.AadhaarCardNo, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.AadhaarCardNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.AadhaarCardFile, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.AadhaarCardFilePath, htmlAttributes: new { @type = "file", @class = "form-control", @onchange = "readURL(this);", accept = "image/*" })
                    @Html.ValidationMessageFor(model => model.AadhaarCardFilePath, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @if (!string.IsNullOrEmpty(Model.AadhaarCardFileUrl))
                    {
                        <img id="blah" src="@Model.AadhaarCardFileUrl" width="40" height="40" alt="your image" />
                    }
                    else
                    {
                        <img id="blah" src="~/Images/male-user-add.png" width="40" height="40" alt="your image" />
                    }
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.IsUser, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.CheckBoxFor(model => model.IsUser)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <p style="font-size: 18px;padding-bottom:5px;"><u>Agreement</u></p>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.LegalDocumentVerificationStatus, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.LegalDocumentVerificationStatus, Model.LegalDocumentVerificationList, "Select", htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.LegalDocumentVerificationStatus, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.AgreementSignupStatus, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.AgreementSignupStatus, Model.AgreementSignupList, "Select", htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.AgreementSignupStatus, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.AgreementStartDate, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.AgreementStartDate,null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AgreementStartDate, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.AgreementEndDate, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.AgreementEndDate, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AgreementEndDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.AgreementNumber, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.AgreementNumber, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AgreementNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.AgreementScanFile, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.AgreementScanFilePath, null, htmlAttributes: new { @type = "file", @class = "form-control", @onchange = "readURL(this);", accept = "image/*" })
                    @Html.ValidationMessageFor(model => model.AgreementScanFilePath, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @if (!string.IsNullOrEmpty(Model.AgreementScanFileUrl))
                    {
                        <img id="blah" src="@Model.AgreementScanFileUrl" width="40" height="40" alt="your image" />
                    }
                    else
                    {
                        <img id="blah" src="~/Images/male-user-add.png" width="40" height="40" alt="your image" />
                    }
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <p style="font-size: 18px;padding-bottom:5px;"><u>Bank Details</u></p>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.BankName, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.BankAccountNumber, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.BankAccountNumber, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BankAccountNumber, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.CompanyNameatBank, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.CompanyNameatBank, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CompanyNameatBank, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.IFSCCode, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.IFSCCode, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IFSCCode, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.BankBranch, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.BankBranch, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BankBranch, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.CancelledChequeFile, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.CancelledChequeFilePath, null, htmlAttributes: new { @type = "file", @class = "form-control", @onchange = "readURL(this);", accept = "image/*" })
                    @Html.ValidationMessageFor(model => model.CancelledChequeFilePath, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @if (!string.IsNullOrEmpty(Model.CancelledChequeFileUrl))
                    {
                        <img id="blah" src="@Model.CancelledChequeFileUrl" width="40" height="40" alt="your image" />
                    }
                    else
                    {
                        <img id="blah" src="~/Images/male-user-add.png" width="40" height="40" alt="your image" />
                    }
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.PaymentCycle, htmlAttributes: new { @class = "col-md-4  col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.PaymentCycle, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PaymentCycle, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <p style="font-size: 18px;padding-bottom:5px;">Registration</p>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.LuluandSky_Status, htmlAttributes: new { @class = "col-md-4 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.LuluandSky_Status, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LuluandSky_Status, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "col-md-4 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Comments, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row" style="padding-bottom: 5px;">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "col-md-4 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.CheckBoxFor(model => model.IsActive, new { @checked = "checked" })

                </div>
            </div>
        </div>

    </div>
    <div class="ln_solid"></div>
</div>
@Scripts.Render("~/bundles/jqueryval")

