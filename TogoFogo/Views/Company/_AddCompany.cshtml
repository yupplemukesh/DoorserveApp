@model TogoFogo.Models.Company.CompanyModel


<div class="form-group row">
    <label class="col-sm-4 control-label" for="form-control-1">Company Website Domain Name</label>
    <div class="col-sm-3">
        @Html.TextBoxFor(x => x.CompanyWebsiteDomainName, new { @class = "form-control input-md" })
        @Html.ValidationMessageFor(model => model.CompanyWebsiteDomainName, "", new { @class = "text-danger" })
    </div>
</div>
    <div class="form-group row">
        <label class="col-sm-4 control-label" for="form-control-1">Domain Expiry Date</label>
        <div class="col-sm-3">
            @Html.TextBoxFor(x => x.DomainExpiryDate, new { @class = "form-control input-md" })
            @Html.ValidationMessageFor(model => model.DomainExpiryDate, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group row">
        <label class="col-sm-4 control-label" for="form-control-1">Company Logo</label>
        <div class="col-sm-6">
            @Html.TextBoxFor(model => model.CompanyPath, htmlAttributes: new { @type = "file", @class = "form-control", @onchange = "readURL(this);", accept = "image/*" })
            @Html.ValidationMessageFor(model => model.CompanyPath, "", new { @class = "text-danger" })
        </div>
    </div>

    @*
        <div class="form-group row">
            <label class="col-sm-4 control-label" for="form-control-1">Uplode Company Logo</label>
            <div class="col-sm-3">
                    @if (!string.IsNullOrEmpty(Model.CompanyFile))
                    {
                        <img id="blah" src="@Model.CompanyFile" width="40" height="40" alt="your image" />
                    }
                    else
                    {
                        <img id="blah" src="~/Images/male-user-add.png" width="40" height="40" alt="your image" />
                    }
            </div>
            <div class="col-sm-1 pull-right">
                <button type="submit" class="btn btn-info btn-sm ">View</button>
            </div>
            <div class="col-sm-1 pull-right">
                <button type="submit" class="btn btn-warning btn-sm ">Remove</button>
            </div>
        </div>*@


    <div class="form-group row">
        <label class="col-sm-4 control-label" for="form-control-1">Anroid App Name</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.AnroidAppName, new { @class = "form-control input-md" })
            @Html.ValidationMessageFor(model => model.AnroidAppName, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group row">

        <label class="col-sm-4 control-label" for="form-control-1">Anroid App Setting</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.AnroidAppSetting, new { @class = "form-control input-md", @placeholder = "Anroid App Setting" })
            @Html.ValidationMessageFor(model => model.AnroidAppSetting, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group row">

        <label class="col-sm-4 control-label" for="form-control-1">IOS App Name</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.IOSAppName, new { @class = "form-control input-md" })
            @Html.ValidationMessageFor(model => model.IOSAppName, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group row">

        <label class="col-sm-4 control-label" for="form-control-1">IOS App Setting</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.IOSAppSetting, new { @class = "form-control input-md", @placeholder = "IOS App Setting" })
            @Html.ValidationMessageFor(model => model.IOSAppSetting, "", new { @class = "text-danger" })
        </div>
    </div>


    

