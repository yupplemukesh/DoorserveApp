@model TogoFogo.Models.ManageLocation
@{
    Layout = null;
}
@using (Html.BeginForm("AddCityLocation", "ManageCityLocation", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
<div class="col-md-8 col-sm-8 col-lg-8 col-xs-12">
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.LocationName, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.LocationName, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.DropDownListFor(model => model.CountryName, null, new { @class = "form-control", onchange = "AjaxWithValue('BindStateJson', 'StateName', this)" })
            @Html.ValidationMessageFor(model => model.CountryName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.StateName, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.DropDownListFor(model => model.StateName, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StateName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextAreaFor(model => model.Comments, htmlAttributes: new { @class = "form-control", @cols = "42", @rows = "2" })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.CheckBoxFor(m=>m.IsActive,new {@checked="checked" })
            @*@Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>
            {
                new SelectListItem {Text = "Yes", Value = "Yes"},
                new SelectListItem {Text = "No", Value = "No"}
            }, "Select", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="ln_solid"></div>
    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-4">
            @*<button class="btn btn-primary" type="button">Cancel</button>*@
            <button class="btn btn-primary" type="reset">Reset</button>
            <button type="submit" class="btn btn-success">Submit</button>
        </div>
    </div>
</div>

}
@if (ViewBag.SortOrder != null)
{
    <script>
        document.getElementById('SortOrder').value = '@ViewBag.SortOrder';

    </script>
}