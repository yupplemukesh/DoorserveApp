

@model TogoFogo.Models.ServiceChargeModel
@{
	Layout = null;
}
@using (Html.BeginForm("EditServiceCharge", "DeviceServiceCharge", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	@Html.HiddenFor(m => m.ServiceChargeId)
<div class="form-group">
    @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"></span>
        @Html.DropDownListFor(model => model.CategoryId, null, new { @class = "form-control", onchange = "AjaxWithValue('BindSubCategoryJson', 'editSubCatId', this)" })
        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.SubCatId, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"></span>
        @Html.DropDownListFor(model => model.SubCatId, null, new { @class = "form-control", id = "editSubCatId" })
        @Html.ValidationMessageFor(model => model.SubCatId, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.BrandId, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"></span>
        @Html.DropDownListFor(model => model.BrandId, null, new { @class = "form-control", onchange = "AjaxWithValue('BindModelNameJson', 'editModalNameId', this)" })
        @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.ModalNameId, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"></span>
        @Html.DropDownListFor(model => model.ModalNameId, null, new { @class = "form-control", id = "editModalNameId" })
        @Html.ValidationMessageFor(model => model.ModalNameId, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.HSNCode, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"></span>
        @Html.TextBoxFor(model => model.HSNCode, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.HSNCode, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.SAC, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"></span>
        @Html.TextBoxFor(model => model.SAC, null, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SAC, "", new { @class = "text-danger" })
    </div>
</div>


<div class="form-group">
    @Html.LabelFor(model => model.TRUPC, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"></span>
        @Html.TextBoxFor(model => model.TRUPC, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.TRUPC, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Form, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"></span>
        @Html.TextBoxFor(model => model.Form, null, new { @class = "form-control" })

        @Html.ValidationMessageFor(model => model.Form, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.MRP, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"></span>
        @Html.TextBoxFor(model => model.MRP, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.MRP, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.MarketPrice, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"></span>
        @Html.TextBoxFor(model => model.MarketPrice, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.MarketPrice, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ServiceCharge, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"></span>
        @Html.TextBoxFor(model => model.ServiceCharge, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ServiceCharge, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"></span>
        @Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>
    {
        new SelectListItem {Text = "Yes", Value = "Yes"},
        new SelectListItem {Text = "No", Value = "No"}

    }, "Select", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
    </div>
</div>

	
	<div class="row ">
		<div class="ln_solid"></div>
		<div class="form-group">
			<div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">

				<button type="submit" class="btn btn-success">Submit</button>
			</div>
		</div>
	</div>

}
