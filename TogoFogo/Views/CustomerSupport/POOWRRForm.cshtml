
@model TogoFogo.Models.ReceiveMaterials
@{
	Layout = null;

}
<style>
	option {
	background:white;
	color:black;
	}
</style>
@using (Html.BeginForm("POOWRRForm", "CustomerSupport", FormMethod.Post, new { onSubmit = "return checkSubmit()", id = "form11" }))
{

	<div class="row">
		<div class="col-md-6">
			<p style="font-size: 17px;"><u>Repair Information:</u></p>
			<div class="row" style="padding-bottom: 5px">
				@Html.LabelFor(model => model.ProcessName, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.ProcessName, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ProcessName, "", new { @class = "text-danger" })
                </div>
			</div>
			<div class="row" style="padding-bottom: 5px">
				@Html.LabelFor(model => model.ServiceProviderName, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
				<div class="col-md-6 col-sm-6 col-xs-12">
					@Html.DropDownListFor(model => model.ServiceProviderName,Model.ServiceProviderNameList, htmlAttributes: new { @class = "form-control btn-warning" })
					@Html.ValidationMessageFor(model => model.ServiceProviderName, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="row" style="padding-bottom: 5px">
				@Html.LabelFor(model => model.CcNo, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
				<div class="col-md-6 col-sm-6 col-xs-12">
					@Html.TextBoxFor(model => model.CcNo, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
					@Html.ValidationMessageFor(model => model.CcNo, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="row" style="padding-bottom: 5px">
				@Html.Label("Call request date", htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
				<div class="col-md-6 col-sm-6 col-xs-12">
					@Html.TextBoxFor(model => model.EntryDate, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
					@Html.ValidationMessageFor(model => model.EntryDate, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="row" style="padding-bottom: 5px">
				@Html.Label("Call Status", htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
				<div class="col-md-6 col-sm-6 col-xs-12">
					@Html.TextBoxFor(model => model.StatusName, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
					@Html.ValidationMessageFor(model => model.StatusName, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="row" style="padding-bottom: 5px">
				@Html.LabelFor(model => model.CurrentStatus, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
				<div class="col-md-6 col-sm-6 col-xs-12">
					@Html.TextBoxFor(model => model.CurrentStatus, new { @class = "form-control", @readonly = "readonly" })
					@Html.ValidationMessageFor(model => model.CurrentStatus, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>
        <div class="col-md-6">
            <p style="font-size: 17px;"><u>Customer Information :</u></p>

            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.Customer_Name, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Customer_Name, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Customer_Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.Mobile_No, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Mobile_No, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Mobile_No, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.AltNo, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.AltNo, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AltNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.Email_Id, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Email_Id, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email_Id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.Cust_Add, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Cust_Add, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Cust_Add, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Pincode, htmlAttributes: new { @class = "form-control", onblur = "BindCityAndSate()" })
                    @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.Cust_City, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Cust_City, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Cust_City, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.Cust_State, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Cust_State, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Cust_State, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="row" style="padding-bottom: 5px">
            @Html.LabelFor(model => model.AltNo, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.AltNo, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.AltNo, "", new { @class = "text-danger" })
            </div>
        </div>*@
        </div>
	</div>
	<div class="row">
        <div class="col-md-6">

            <p style="font-size: 17px;"><u>Device Information:</u></p>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.DeviceType, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.DeviceType, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.DeviceType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Brand, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Model, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.ModelColor, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.ModelColor, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ModelColor, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.TUPCModel, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.TUPCModel, htmlAttributes: new { @class = "form-control", @readonly = "readyonly" })
                    @Html.ValidationMessageFor(model => model.TUPCModel, "", new { @class = "text-danger" })
                </div>
            </div>
            @*<div class="row" style="padding-bottom: 5px">
            @Html.LabelFor(model => model.Problem, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.Problem, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Problem, "", new { @class = "text-danger" })
            </div>
        </div>*@
            <div class="row" style="padding-bottom: 5px;display:none" id="Serial_No">
                @Html.LabelFor(model => model.Serial_No, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.Serial_No, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Serial_No, "", new { @class = "text-danger" })
                </div>
            </div>
            <div id="IMEI1" style="display:none">
                <div class="row" style="padding-bottom: 5px">
                    @Html.LabelFor(model => model.IMEI1, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.IMEI1, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.IMEI1, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px">
                    @Html.LabelFor(model => model.IMEI2, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.IMEI2, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.IMEI2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.Problem, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12" style="    display: inline-flex;">
                    @Html.DropDownListFor(model => model.Problem, Model.ProblemList, "Select", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Problem, "", new { @class = "text-danger" })
                    <input type="button" value="Add" onclick="AddProblem()" class="btn btn-info" />
                </div>
            </div>
            <table class="table table-striped table-bordered table-condensed text-nowrap" id="test1">A
                <thead>
                    <tr>
                        <th>Problem</th>
                        <th>Estimated Price</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ChildtableDataProblem != null)
                    {
                        foreach (var item in Model.ChildtableDataProblem)
                        {
                            <tr>

                                <td hidden>@Html.DisplayFor(modelItem => item.ProblemId)</td>
                                <td>@Html.DisplayFor(modelItem => item.ProblemName)</td>
                                <td>@Html.DisplayFor(modelItem => item.Estimated_Price)</td>
                                <td><input class="btn btn-danger me" type="button" value="Remove" /></td>
                            </tr>
                        }

                    }

                </tbody>
            </table>


        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            <p style="font-size: 17px;"><u>Warranty Information:</u></p>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.WS, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @*@Html.TextBoxFor(model => model.WS, new { @class = "form-control", @readonly = "readonly" })*@
                    @Html.TextBoxFor(model => model.WS, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.WS, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.WarrantyStatus, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.WarrantyStatus, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.WarrantyStatus, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.WarrantyExpiryDate, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.WarrantyExpiryDate, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.WarrantyExpiryDate, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<p style="font-size: 17px;"><u>Device Problems:</u></p>
        <div class="row" style="padding-bottom: 5px">
            @Html.LabelFor(model => model.PhysicalDamage, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.PhysicalDamage, new List<SelectListItem>
                    {
                    new SelectListItem {Text = "Yes", Value = "Yes"},
                    new SelectListItem {Text = "No", Value = "No"}

                    }, "Select", new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.PhysicalDamage, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row" style="padding-bottom: 5px">
            @Html.LabelFor(model => model.WarrantyVoid, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.WarrantyVoid, new List<SelectListItem>
                    {
                    new SelectListItem {Text = "Yes", Value = "Yes"},
                    new SelectListItem {Text = "No", Value = "No"}

                    }, "Select", new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.WarrantyVoid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row" style="padding-bottom: 5px">
            @Html.LabelFor(model => model.PrblmObsrvdPoowrr, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.PrblmObsrvdPoowrr, null, new { @class = "selectpicker", multiple = "multiple", data_live_search = "true", data_actions_box = "true", data_width = "100%" })
                @Html.ValidationMessageFor(model => model.PrblmObsrvdPoowrr, "", new { @class = "text-danger" })
            </div>
        </div>*@
        </div>
	</div>
	@*<div class="row">
		<p style="font-size: 17px;"><u>Spare Parts Required:</u></p>
		<div class="col-md-6">
			<div class="row" style="padding-bottom: 5px">
				@Html.LabelFor(model => model.SpareType, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
				<div class="col-md-6 col-sm-6 col-xs-12">

					@Html.DropDownListFor(model => model.SpareType, null, new { @class = "form-control", onchange = "AjaxWithValueForSparePartName('NewBindSparePartNameJson', 'SpareName', this)" })

					@Html.ValidationMessageFor(model => model.SpareType, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="row" style="padding-bottom: 5px">
				@Html.LabelFor(model => model.SpareName, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
				<div class="col-md-6 col-sm-6 col-xs-12">

					@Html.DropDownListFor(model => model.SpareName, null, new { @class = "form-control" })

					@Html.ValidationMessageFor(model => model.SpareName, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="row" style="padding-bottom: 5px">
				@Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
				<div class="col-md-6 col-sm-6 col-xs-12">

					@Html.TextBoxFor(model => model.Quantity, new { @class = "form-control" })

					@Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>
		<div class="col-md-2" style="margin-top: 10px;">
			<input type="button" class="btn btn-primary" value="Add" onclick="getSpareData()" />
		</div>
	</div>
	<div class="row">
		<table class="table table-bordered table-condensed" style="width: 100%" id="test2">
			<thead>
				<tr>
					<th>Call Request Number</th>
					<th>Job Number</th>
					<th>Spare Type</th>
					<th>Spare Code</th>
					<th>Spare Name</th>
					<th>Spare Quantity</th>
					<th>Unit Price</th>
					<th>Total</th>
					<th>Action</th>
				</tr>
			</thead>

			<tbody></tbody>
		</table>

	</div>
	<div class="row">
		<input type="button" value="Calculate" class="btn btn-info text-center" onclick="calculateBill()" />
	</div>*@
    <div class="row">
        <p style="font-size: 17px;"><u>Estimated Repair Cost (INR):</u></p>
        <div class="col-md-6">

            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.ServiceCharge, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.ServiceCharge, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ServiceCharge, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.SpareCost, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.SpareCost, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.SpareCost, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.DeviceWarranty, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.DeviceWarranty, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.DeviceWarranty, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.EstimatedCost, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.EstimatedCost, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.EstimatedCost, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="col-md-6">
            <div class="row">
                <label class="col-md-3 col-md-offset-1 control-label" for="selectbasic">
                    Estimated Cost Approved
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.CheckBoxFor(x => x.IsEstimatedCostApproved)
                </div>
            </div>

               
                    <div class="row">
                        <label class="col-md-3 col-md-offset-1 control-label" for="selectbasic">
                            Is customer agree to wipe device data?
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.CheckBoxFor(x => x.wipedevicedata)
                        </div>
                    </div>
               
          
        </div>
        

        @*<div class="col-md-6">
                <div class="row" style="padding-bottom: 5px">
                    @Html.LabelFor(model => model.IsEstimatedCostApproved, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.DropDownListFor(model => model.IsEstimatedCostApproved, new List<SelectListItem>
        {
            new SelectListItem {Text = "Yes", Value = "Yes"},
            new SelectListItem {Text = "No", Value = "No"}

        }, "Select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IsEstimatedCostApproved, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px">
                    @Html.LabelFor(model => model.wipedevicedata, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.DropDownListFor(model => model.wipedevicedata, new List<SelectListItem>
        {
            new SelectListItem {Text = "Yes", Value = "Yes"},
            new SelectListItem {Text = "No", Value = "No"}

        }, "Select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.wipedevicedata, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@
    </div>
	<div class="row">
		<p style="font-size: 17px;"><u>Customer Support Action:</u></p>
        <div class="col-md-6">
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.customerPickupdate, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.customerPickupdate, new { @class = "form-control",@readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.customerPickupdate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                @Html.LabelFor(model => model.CallStatus, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.CallStatus, Model.CallStatusList, "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CallStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="Pending" style="display: none">


            </div>
            <div id="CallRequestRejectReason" style="display:none">
                <div class="row" style="padding-bottom: 5px">
                    @Html.LabelFor(model => model.CallRequestRejectReason, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.CallRequestRejectReason, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CallRequestRejectReason, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>


            <div id="CallBack" style="display:none">
                <div class="row" style="padding-bottom: 5px">
                    @Html.LabelFor(model => model.CallBackDatetime, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.CallBackDatetime, new { @class = "form-control", id = "form_datetime", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.CallBackDatetime, "", new { @class = "text-danger" })
                    </div>
                </div>


            </div>
            <div id="SchedulePick" style="display:none">
                <div class="row" style="padding-bottom: 5px">
                    @Html.LabelFor(model => model.SchedulePickup, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.SchedulePickup, new { @class = "form-control", id = "form_datetime2", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.SchedulePickup, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px;">
                    @Html.LabelFor(model => model.ReversePickupDate, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.ReversePickupDate, new { @class = "form-control", id = "form_datetime1", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.ReversePickupDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div id="EngineerVisit" style="display:none;">
                <div class="row" style="padding-bottom: 5px;">
                    @Html.LabelFor(model => model.EngineerVisitDate, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.EngineerVisitDate, new { @class = "form-control", id = "form_datetime2", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.EngineerVisitDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div id="commanPart" style="display:none">


                <div class="row" style="padding-bottom: 5px">
                    @Html.LabelFor(model => model.SelectTrc, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.DropDownListFor(model => model.SelectTrc, Model.SelectTrcList, new { @class = "form-control btn-warning" })

                        @Html.ValidationMessageFor(model => model.SelectTrc, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px">
                    @Html.LabelFor(model => model.TRCFullAddr, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextAreaFor(model => model.TRCFullAddr, new { @class = "form-control", @cols = "42", @rows = "3", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.TRCFullAddr, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row" style="padding-bottom: 5px">
                    @Html.LabelFor(model => model.CourierName, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">

                        @Html.DropDownListFor(model => model.CourierName, Model.CourierNameList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CourierName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px">
                    @Html.LabelFor(model => model.CourierLogo, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">

                        <img src="" id="CourierLogo" width="100" height="100" alt="Courier Image" />
                        @Html.ValidationMessageFor(model => model.CourierLogo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="padding-bottom: 5px">
                    @Html.LabelFor(model => model.CourierContact, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.CourierContact, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.CourierContact, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row" style="padding-bottom: 5px">
                    @Html.LabelFor(model => model.CourierActive, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">

                        @Html.DropDownListFor(model => model.CourierActive, new List<SelectListItem>
                            {
                                new SelectListItem {Text = "Yes", Value = "Yes"},
                                new SelectListItem {Text = "No", Value = "No"}

                            }, "Select", new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.CourierActive, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div id="commanAll" style="display:none">
                <div class="row" style="padding-bottom: 5px">
                    @Html.LabelFor(model => model.Remarks, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control", @cols = "42", @rows = "3" })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div style="display:none" id="EmailSmsPart">
                <div class="row">
                    @Html.LabelFor(model => model.EMail_SMS, new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextAreaFor(model => model.EMail_SMS, new { @class = "form-control", @cols = "42", @rows = "4" })
                        @Html.ValidationMessageFor(model => model.EMail_SMS, "", new { @class = "text-danger" })
                    </div>

                    <div class=" col-md-2" style="margin-top:10px;">
                        <input type="button" value="Send Message" class="btn btn-info" />
                    </div>
                </div>
            </div>

        </div>
        <div class="col-md-6">
         
        </div>
	</div>

	<div class="ln_solid"></div>
	<div class="form-group">
		<div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
			<button class="btn btn-primary" type="reset">Reset</button>
			<button type="submit" class="btn btn-success" id="btnNotify">Submit</button>
		</div>
	</div>
}


