@model TogoFogo.Models.ServiceCenter.CallDetailsModel
@{
    ViewBag.Title = "ManageServiceProvidersDetails";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}


<div class="panel-default m-b-10">
    <div class="panel-heading p-l-0">
        <div class="row">
            <div class="col-md-12">
                <h4 class="m-t-0 m-b-5 m-l-20">View Calls</h4>
                @Html.Partial("_CallInformationForm", Model)
                @Html.Partial("~/Views/Common/_CustomerInfoForm.cshtml", Model)
                @Html.Partial("~/Views/Common/_CallLogDeviceInfoForm.cshtml", Model)
                @if (Model.ServiceTypeId == 8)
                {
                    <div id="ProblemInfo">
                        @Html.Partial("~/views/common/_DeviceProblemDetails.cshtml", new TogoFogo.Models.ReportedProblemModel { IssueOcurringSinceDate = Model.IssueOcurringSinceDate, ProblemDescription = Model.ProblemDescription, IsRepeat = Model.IsRepeat, RefKey = Model.DeviceId })
                    </div>
                }
                else
                {
                    <div id="ProblemInfo" style="display:none">
                        @Html.Partial("~/views/common/_DeviceProblemDetails.cshtml", new TogoFogo.Models.ReportedProblemModel
                        { IssueOcurringSinceDate = Model.IssueOcurringSinceDate, ProblemDescription = Model.ProblemDescription, IsRepeat = Model.IsRepeat, RefKey = Model.DeviceId })
                    </div>

                }
                @if (Convert.ToBoolean(Model.IsRepeat))
                {
                    @Html.Partial("~/Views/Common/_PreviousCallDetails.cshtml",
   new TogoFogo.Models.PreviousCallModel
        {
       CallDate = Model.PrvCallDate,
       CallId = Model.PrvCallId,
       ProblemDescription = Model.PrvProblemDescription,
       ProblemCloseDate = Model.ProblemCloseDate
   })
                    @Html.Partial("~/Views/Common/_WarranyInformationModel.cshtml",
                    new TogoFogo.Models.WarrantyInformationModel
                        {
                            ExpiryDate = Model.ExpiryDate,
                        Status = Model.WarranyStatus
                        })

                }
                @using (Html.BeginForm("UpdateCalls", "ServiceCenter", FormMethod.Post, new { enctype = "multipart/form-data", id = "callform" }))
                {
                    @Html.HiddenFor(x => x.DeviceId)
                    @Html.Partial("~/Views/Common/_AppointmentDetails.cshtml", Model)

                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.Label("Authorized Serive Provider", htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <span class="input-group-addon"></span>
                                    @Html.DropDownListFor(model => model.providerId, Model.ProviderList, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.providerId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    if (string.IsNullOrEmpty(Model.Param))
                    {
                        <div class="row- form-group">
                            <div class="col-md-offset-10">
                                <a href="#">
                                    <button type="submit" class="btn btn-primary m-w-60">Submit</button>
                                </a>
                            </div>


                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

@if (Model.Param == "P")
{
    using (Html.BeginForm("ManageServiceProvidersDetails", "ServiceCenter", FormMethod.Post, new { enctype = "multipart/form-data", id = "callform" }))
    {
        @Html.HiddenFor(x => x.CStatus)
        @Html.HiddenFor(x => x.RejectionReason, new { id = "Rejection_Reason" })
        @Html.HiddenFor(x => x.DeviceId)
        <div class="row- form-group">
            <div class="col-md-3 col-md-offset-9">
                <span>
                    <a href="@Url.Action("AcceptCalls", "ServiceCenter")">
                        <button type="button" class="btn btn-info m-w-60" id="btnback">Back</button>
                    </a>
                    <a href="#">
                        <button type="button" class="btn btn-danger m-w-60" data-target="#rejectpopup" id="btnReject">Reject</button>
                    </a>
                    <a href="#">
                        <button type="submit" class="btn btn-primary m-w-60" id="btnAccept">Accept</button>
                    </a>
                </span>
            </div>
        </div>

    }
}

@if (Model.Param == "A")
{
    <div class="form-horizontal">
        <div class="panel-body p-b-0 p-t-0">
            <div class="panel-heading p-l-0 p-b-0">

                <div class="row">
                    <div class="col-md-12">
                        <h4 class="m-t-0 m-b-5">Assign Call to technician</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
    using (Html.BeginForm("UpdateCall", "ServiceCenter", FormMethod.Post, new { enctype = "multipart/form-data", id = "callform2" }))
    {
        @Html.HiddenFor(x => x.Employee.EmpId)
        @Html.HiddenFor(x => x.DeviceId)
        @Html.HiddenFor(x => x.Remarks)
        @Html.HiddenFor(x => x.AppointmentDate)
        @Html.HiddenFor(x => x.StateId)
        <div class="form-group p-l-10" id="DropDown2">
            <div class="col-sm-3"> <h4>Select Technician</h4></div>
            <div class="col-sm-5">
                @*@Html.DropDownListFor(x => x.Employee.EmpId, Model.Employee.EmployeeList, "--Select--", "Text", "Value", new { @class = "form-control", id = "DropDown" })*@

                @Html.DropDownListFor(m => m.Employee.EmpId, new SelectList(Model.Employee.EmployeeList, "Value", "Text"), "Select", new { @class = "form-control", id = "DropDown" })

                @Html.ValidationMessageFor(x => x.Employee.EmpId, "", new { @class = "text-danger" })
            </div>
        </div>
        if (Model.EmpId != null)
        {
            <div class="panel-body">
                <div id="TechnicianDetailsForm2">
                    @Html.Partial("_TechnicianDetailsForm", Model.Employee)
                </div>
            </div>
            if (Model.ServiceTypeId == 8)
            {
                <div class="panel panel-default panel-table b-r-0">
                    <div class="panel-body">
                        <div class="form-horizontl">
                            <h4 class="m-t-0 m-b-25 p-t-10 p-b-10"> Spare Parts Detail</h4>
                            @Html.Partial("_AddorEditPartDetails", new TogoFogo.Models.PartsDetailsModel())
                        </div>
                        @Html.Partial("_PartsDetails", Model.Parts)
                    </div>
                </div>                   
            }
        }
        else
        {
            <div class="panel-body">
                <div id="TechnicianDetailsForm2" style="display:none;">
                    @Html.Partial("_TechnicianDetailsForm", Model.Employee)
                </div>
            </div>
        }
        <div class="row form-group m-t-5">
            <div class=" col-md-offset-10 col-md-1">
                <button type="submit" id="btnemp" class="btn btn-primary pull-right" EmpId="@Model.Employee.EmpId">Submit</button>
            </div>
            <div class="col-md-1">
                <button type="button" id="btnPrint" class="btn btn-primary pull-right" EmpId="@Model.Employee.EmpId">Print</button>
            </div>
        </div>





    }

}






<div id="rejectpopup" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body">
                <div class="form-group col-md-12" id="rejectResonDiv">
                    <label for="form-control-3" class="col-sm-3 col-md-3 control-label">Rejected Reason</label>
                    <div class="col-sm-8 col-md-8">

                        @Html.TextAreaFor(model => model.RejectionReason, new { @class = "form-control", id = "Reasontxt" })
                        @Html.ValidationMessageFor(model => model.RejectionReason, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" id="btnrejectreasion" class="btn btn-primary" deviceID="@Model.DeviceId">Submit</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/js/form-m")
    <script>

        $(document).ready(function () {

            $("#btnReject").click(function () {

                $("#rejectpopup").modal("show");

            });
            $("#btnrejectreasion").click(function () {
                //var statusId = $("#CallDetails_StatusId").val();

                //var status_Id = $(this).attr(st);
                //document.getElementById().val = status_Id;

                var rejectionreason = $("#Reasontxt").val();
                $("#Rejection_Reason").val(rejectionreason);
                $("#CStatus").val(9);
                $("#callform").submit();

            });

            $("#btnemp").click(function () {
                $("#callform2").submit();
            });
            $("#DropDown").change(function () {

                var Id = $(this).val();
                // var Id = $dd.val();
                $.ajax({
                    type: "POST",
                    url: "/ServiceCenter/TechnicianDetails",
                    data: {
                        EmpId: Id
                    },
                    success: function (response) {
                        console.log(response);
                        console.log(response.EMPPhotoUrl);
                        $("#EmpId").val(response.EmpId);
                        $("#TechnicianTypeName").val(response.TechnicianTypeName);
                        $("#TechnicianName").val(response.TechnicianName);
                        $("#ContactNumber").val(response.ConMobileNumber);
                        if (response.EMPPhoto != null || response.EMPPhoto != "") {
                            $("#EmpImg").prop("src", response.EMPPhotoUrl);
                        }
                        $("#TotalOpenCalls").val(response.TotalOpenCalls);
                        $("#TotalCloseCalls").val(response.TotalCloseCalls);
                        $("#Vehicle_VehicleTypeName").val(response.Vehicle.VehicleTypeName);
                        $("#Vehicle_VehicleBrand").val(response.Vehicle.VehicleBrand);
                        $("#Vehicle_VHModel").val(response.Vehicle.VHModel);
                        $("#Vehicle_VHNumber").val(response.Vehicle.VHNumber);
                        $("#Vehicle_DrivingLicense").val(response.Vehicle.DrivingLicense);

                        if (response.Vehicle.InsuranceExpairyDate != null)
                            $("#Vehicle_InsuranceExpairyDate").val(new Date(parseInt(response.Vehicle.InsuranceExpairyDate.substr(6))));
                        console.log(response);
                    },
                    error: function (e) {
                        console.log(e);
                        alert("Something went wrong...");
                    },
                    complete: function () {
                        $("#TechnicianDetailsForm2").show();
                        $("#DropDown2").hide();
                    }
                })

            });
        });
        $(document).ready(function () {

            $("#IsExistingCustomer").attr('disabled', true);
            $("#CustomerContactNumber").attr('disabled', true);
            $("#CustomerTypeId").attr('disabled', true);
            $("#CustomerName").attr('disabled', true);
            $("#CustomerEmail").attr('disabled', true);
            $("#Address").attr('disabled', true);
            $("#NearLocation").attr('disabled', true);
            $("#PinNumber").attr('disabled', true);
            $("#CountryId").attr('disabled', true);
            $("#StateId").attr('disabled', true);
            $("#CityId").attr('disabled', true);
            $("#DeviceCategoryId").attr('disabled', true);
            $("#DeviceSubCategoryId").attr('disabled', true);
            $("#DeviceBrandId").attr('disabled', true);
            $("#DeviceModelNo").attr('disabled', true);
            $("#DeviceModalId").attr('disabled', true);
            $("#BillNo").attr('disabled', true);
            $("#DeviceIMEIOne").attr('disabled', true);
            $("#DeviceIMEISecond").attr('disabled', true);
            $("#PurchaseFrom").attr('disabled', true);
            $("#DOP").attr('disabled', true);
            $("#BillAmount").attr('disabled', true);
            $("#DeviceConditionId").attr('disabled', true);
            $("input:radio").prop('disabled', true);

        });

    </script>
}
