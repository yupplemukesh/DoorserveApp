@model TogoFogo.Models.ManageServiceProviderModel
@{


    Layout = null;
}


@using (Html.BeginForm("EditServiceProvider", "ManageProvider", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.ProviderId)
    @Html.HiddenFor(m => m.GST_No_File)
    @Html.HiddenFor(m => m.Pancardno_File)
    @Html.HiddenFor(m => m.UserPanNo_File)
    @Html.HiddenFor(m => m.VoterIdCard_File)
    @Html.HiddenFor(m => m.AadharCard_File)
    @Html.HiddenFor(m => m.VoterIdCard_File)
    @Html.HiddenFor(m => m.CancelledChequeFile)
    <div class="form-group">
        <p style="font-size: 19px;"><u>Website</u></p>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ProcessName, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(model => model.ProcessName, new List<SelectListItem>
           {
               new SelectListItem {Text = "Togofogo Repairs", Value = "Togofogo Repairs"},
               new SelectListItem {Text = "WarrantyBazaar", Value = "WarrantyBazaar"}

           }, "Select", new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.ProcessName, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ProviderCode, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.ProviderCode, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.ProviderCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ProviderName, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.ProviderName, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.ProviderName, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.SupportedCategory, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.ListBoxFor(model => model.Supported_Category, null, htmlAttributes: new { @class = "selectpicker", multiple = "multiple", data_actions_box = "true", data_width = "100%" })
            </div>
            @Html.ValidationMessageFor(model => model.SupportedCategory, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <p style="font-size: 19px;"><u>Address and Contact Person</u></p>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.AddressType, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(model => model.AddressType, new List<SelectListItem>
                {
                    new SelectListItem {Text = "Home", Value = "Home"},
                    new SelectListItem {Text = "Office", Value = "Office"},
                    new SelectListItem {Text = "Neighbour", Value = "Neighbour"}
                }, "Select", new { @class = "form-control" })

            </div>
            @Html.ValidationMessageFor(model => model.AddressType, "", new { @class = "text-danger" })

        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(model => model.Country, null, new { @class = "form-control", onchange = "AjaxWithValue('BindStateJson', 'editProviderState', this)" })
            </div>
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ProviderState, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(model => model.ProviderState, null, new { @class = "form-control", id = "editProviderState", onchange = "AjaxWithValue('BindLocationJson', 'editProviderCity', this)" })
            </div>
            @Html.ValidationMessageFor(model => model.ProviderState, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ProviderCity, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(model => model.ProviderCity, null, new { @class = "form-control", id = "editProviderCity" })
            </div>
            @Html.ValidationMessageFor(model => model.ProviderCity, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="col-md-1">
            @Html.Label("If Others", htmlAttributes: new { @class = "" })
        </div>
        <div class="col-md-3">
            @Html.TextBoxFor(model => model.CITY, htmlAttributes: new { @class = "form-control" })
        </div>*@
    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.Address, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.Locality, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.Locality, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.Locality, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.NearByLoc, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.NearByLoc, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.NearByLoc, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.Pincode, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.FirstName, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.LastName, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.Mobile_No, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.Mobile_No, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.Mobile_No, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.Email, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.UserPanNo, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.UserPanNo, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.UserPanNo, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.UserPanNo_File, htmlAttributes: new { @class = "" })

            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.UserPanNo_File1, htmlAttributes: new { @type = "file", @class = "form-control", @onchange = "readURL(this);" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.VoterIdCard, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.VoterIdCard, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.VoterIdCard, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.VoterIdCard_File, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.VoterIdCard_File1, htmlAttributes: new { @type = "file", @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.VoterIdCard_File1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.AadhaarNo, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.AadhaarNo, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.AadhaarNo, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.AadharCard_File, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.AadharCard_File1, htmlAttributes: new { @type = "file", @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.AadharCard_File1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <p style="font-size: 19px;"><u>Organization</u></p>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.OrganisationName, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.OrganisationName, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.OrganisationName, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.Org_Code, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.Org_Code, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.Org_Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.Org_IEC_No, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.Org_IEC_No, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.Org_IEC_No, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.StatutoryType, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(model => model.StatutoryType, new List<SelectListItem>
           {
               new SelectListItem {Text = "Partnership", Value = "Partnership"},
               new SelectListItem {Text = "Private Limited", Value = "Private Limited"},
               new SelectListItem {Text = "Proprietary", Value = "Proprietary"},
                new SelectListItem {Text = "Limited", Value = "Limited"}
           }, "Select", new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.StatutoryType, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.TaxType, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(model => model.TaxType, new List<SelectListItem>
                {
                    new SelectListItem {Text = "Indian Gst", Value = "Indian Gst"},
                    new SelectListItem {Text = "Gst", Value = "Gst"}

                }, "Select", new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.TaxType, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.GstCategory, htmlAttributes: new { @class = "" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(model => model.GstCategory, null, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.GstCategory, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.GST_No, htmlAttributes: new { @class = "" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.GST_No, htmlAttributes: new { @class = "form-control", @onchange = "readURL(this);" })
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.GST_No_File, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.GST_No_File1, htmlAttributes: new { @type = "file", @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.GST_No_File1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.PancardNo, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.PancardNo, htmlAttributes: new { @class = "form-control", @onchange = "readURL(this);" })
            </div>
            @Html.ValidationMessageFor(model => model.PancardNo, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.Pancardno_File, htmlAttributes: new { @class = "" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.Pancardno_File1, htmlAttributes: new { @type = "file", @class = "form-control", @onchange = "readURL(this);" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <p style="font-size: 19px;"><u>Bank Details</u></p>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.BankName, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.BankAccNo, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.BankAccNo, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.BankAccNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.CompanyNameAtBank, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.CompanyNameAtBank, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.CompanyNameAtBank, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.IFSC_Code, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.IFSC_Code, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.IFSC_Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.BankBranch, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.BankBranch, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.BankBranch, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.CancelledChequeFile, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.CancelledChequeFile1, htmlAttributes: new { @type = "file", @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.CancelledChequeFile1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <p style="font-size: 19px;"><u>Registration</u></p>
        <div class="col-md-12 col-sm-12 col-xs-12">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.Comments, htmlAttributes: new { @class = "form-control", placeholder = "" })
            </div>
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.IsUser, htmlAttributes: new { @class = "control-label" })
            @Html.CheckBoxFor(model => model.IsUser)
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
            @Html.CheckBoxFor(model => model.IsActive)
        </div>
    </div>



    <div class="row ">
        <div class="ln_solid"></div>
        <div class="form-group">
            <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                <button type="submit" class="btn btn-success">Submit</button>
            </div>
        </div>
    </div>
}
<script>
    $('.selectpicker').selectpicker();
    $(".bootstrap-select").click(function () {
        $(this).addClass("open");

        //$('#CountryList').attr('data-live-search', true);
    });
    $(document).click(function () {
        $(".bootstrap-select").removeClass("open");
        $('.selectpicker').attr("data-live-search", true);

    });
    $(".bootstrap-select").click(function (e) {
        debugger;
        e.stopPropagation();


    });
</script>
<script src="~/Content/Scripts/jquery-1.10.2.js"></script>
<script src="~/Content/Scripts/jquery.validate.js"></script>
<script src="~/Content/Scripts/jquery.validate.unobtrusive.js"></script>
@Scripts.Render("~/bundles/jqueryval")