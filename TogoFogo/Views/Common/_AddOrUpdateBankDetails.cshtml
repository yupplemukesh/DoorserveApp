@model TogoFogo.Models.BankDetailModel
<!-- Text input-->

@using (Html.BeginForm("AddOrEditBank", "ManageClients", FormMethod.Post, new { enctype = "multipart/form-data" }))
{


    @Html.HiddenFor(x => x.RefKey)
    @Html.HiddenFor(x => x.bankId)
    @Html.HiddenFor(x => x.Action)
    @Html.HiddenFor(x => x.BankCancelledChequeFileName)
    <div class="form-group">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.BankNameId, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.DropDownListFor(model => model.BankNameId, Model.BankList, "Select", new { @class = "form-control" })

                    </div>
                    @Html.ValidationMessageFor(model => model.BankNameId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.BankAccountNumber, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(model => model.BankAccountNumber, htmlAttributes: new { @class = "form-control", placeholder = "Bank Account Number" })

                    </div>
                    @Html.ValidationMessageFor(model => model.BankAccountNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.BankCompanyName, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(model => model.BankCompanyName, htmlAttributes: new { @class = "form-control", placeholder = "Company Name at Bank Account" })

                    </div>
                    @Html.ValidationMessageFor(model => model.BankCompanyName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.BankIFSCCode, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(model => model.BankIFSCCode, htmlAttributes: new { @class = "form-control input-md", placeholder = "IFSC Code" })

                    </div>
                    @Html.ValidationMessageFor(model => model.BankIFSCCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.BankBranchName, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(model => model.BankBranchName, htmlAttributes: new { @class = "form-control", placeholder = "Bank Branch" })

                    </div>
                    @Html.ValidationMessageFor(model => model.BankBranchName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.BankCancelledChequeFilePath, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(model => model.BankCancelledChequeFilePath, htmlAttributes: new { @type = "file", @class = "form-control" })

                    </div>
                    @Html.ValidationMessageFor(model => model.BankCancelledChequeFilePath, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>



    <div class="form-group">
        <div class="row">
            <div class="col-md-12 text-center">


                <button type="submit" class="btn btn-success">Submit</button>

            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jqueryval")
