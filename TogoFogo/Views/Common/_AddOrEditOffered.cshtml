@model TogoFogo.Models.ServiceOfferedModel
@Html.HiddenFor(x => x.ServiceId)
@Html.HiddenFor(x => x.RefKey)
<div class=" row form-group">
    <label class="col-md-2 control-label" for="selectbasic">Device Category	</label>
    <div class="col-md-4">
        @Html.DropDownListFor(model => model.CategoryId, Model.SupportedCategoryList, "-Select-", htmlAttributes: new { @class = "form-control", onchange = "AjaxWithValue('BindSubCategoryJson', 'SubCategoryId', this)" })
        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
    </div>
    <label class="col-md-2 control-label" for="selectbasic">Device Sub-Category	</label>
    <div class="col-md-4">
        @Html.DropDownListFor(model => model.SubCategoryId, Model.SupportedSubCategoryList, "-Select-", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="row form-group">

    <label class="col-md-2 control-label" for="radios">Service Type</label>
    <div class="col-md-4">
        @Html.DropDownListFor(model => model.ServiceTypeId, Model.ServiceList, "-Select-", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ServiceTypeId, "", new { @class = "text-danger" })
    </div>

    <label class="col-md-2 control-label" for="radios">Service Delivery Type</label>
    <div class="col-md-4">

        @Html.DropDownListFor(model => model.DeliveryTypeId, Model.DeliveryServiceList, "-Select-", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.DeliveryTypeId, "", new { @class = "text-danger" })

    </div>


</div>


<div class="row form-group">

    <label class="col-md-2 control-label" for="radios">Country</label>
    <div class="col-md-4">
        @Html.DropDownListFor(model => model.CountryId, Model.CountryList, "-Select-", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
    </div>
    <label class="col-md-2 control-label" for="radios">State</label>
    <div class="col-md-4">
        @Html.DropDownListFor(model => model.StateId, Model.StateList, "-Select-", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
    </div>


</div>

<div class="row form-group">

    <label class="col-md-2 control-label" for="radios">City</label>
    <div class="col-md-4">
        @Html.DropDownListFor(model => model.CityId, Model.CityList, "-Select-", htmlAttributes: new { @class = "form-control" });
        @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
    </div>
    <label class="col-md-2 control-label" for="radios">Pincode</label>
    <div class="col-md-4">
        @Html.DropDownListFor(model => model.PinCode, Model.PinCodeList, "-Select-", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
    </div>


</div>

<div class="row form-group">
    <label class="col-md-2 control-label" for="radios">IsActive</label>
    <div class="col-md-1">
        @Html.CheckBoxFor(model => model.IsActive, htmlAttributes: new { @class = "form-control" })
    </div>
    <label class="col-md-2 control-label" for="radios">Remarks </label>
    <div class="col-md-4">
        @Html.TextAreaFor(model => model.Remarks, htmlAttributes: new { @class = "form-control" })
    </div>
</div>