@model TogoFogo.Models.ClientData.UploadedExcelModel

   

            <div class="panel  panel-table">               
                <div class="panel-body">
                    <h4 class="m-t-10 m-b-5 m-b-10 p-b-10">Customer Imformation</h4>

                    <div class="row">
                        <div class="col-sm-3 col-md-3 ">
                            <label class="custom-control custom-control-primary custom-checkbox">
                                @Html.CheckBoxFor(x => x.IsExistingCustomer, new { @class = "custom-control-input" })
                                <span class="custom-control-indicator"></span>
                                <span>Is Existing Customer ?</span>
                            </label>
                        </div>

                        <div class="col-sm-9 col-md-9 ">
                            <div class="form-group row">

                                <label class="col-sm-1 " for="form-control-1"> Mobile  </label>
                                <div class="col-sm-2 col-md-2 ">
                                    @Html.TextBoxFor(x => x.CustomerContactNumber, new { @class = "", onchange = "getCustomer()" })
                                    @Html.ValidationMessageFor(x => x.CustomerContactNumber, "", new { @class = "text-danger", style = "white-space:nowrap" })
                                </div>


                                <label class="col-sm-3 col-md-3 text-right" for="form-control-1"> Customer Type  </label>

                                <div class="col-sm-6 col-md-6">
                                    @foreach (var item in Model.CustomerTypeList)
                                    {
                                        <label class="custom-control custom-control-primary custom-checkbox">
                                            @Html.RadioButtonFor(x => x.CustomerTypeId, item.Value)
                                            <span>@item.Text</span>
                                        </label>
                                    }

                                </div>
                                @Html.ValidationMessageFor(x => x.CustomerTypeId, "", new { @class = "text-danger p-l-40" })
                            </div>
                        </div>
                    </div>


                    <div class="row">
                        <div class="form-material">
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.TextBoxFor(x => x.CustomerName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.CustomerName, "", new { @class = "text-danger" })
                                    <label class="floating-label">Customer Name</label>
                                </div>
                            </div>


                            <div class="col-sm-3">
                                <div class="form-group">

                                    @Html.TextBoxFor(x => x.CustomerEmail, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.CustomerEmail, "", new { @class = "text-danger" })
                                    <label class="floating-label">Email</label>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.TextBoxFor(x => x.CustomerAltConNumber, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.CustomerAltConNumber, "", new { @class = "text-danger" })
                                    <label class="floating-label"> Alternative Contact Number</label>
                                </div>
                            </div>


                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.TextBoxFor(x => x.Address, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.Address, "", new { @class = "text-danger" })
                                    <label class="floating-label">Address</label>
                                </div>
                            </div>                            

                        </div>
                        </div>

                    <div class="form-material">
                        <div class="row">


                            <div class="col-md-6">
                                <div class="row form-group has-value">
                                    <div class="col-md-3 col-sm-3"><label class="label-font-500">Address Type</label> </div>
                                 
                                    @foreach (var item in Model.AddressTypelist)
                                    {
                                        <label class="custom-control custom-control-primary custom-checkbox">
                                            @Html.RadioButtonFor(x => x.AddressTypeId, item.Value)
                                            <span>@item.Text</span>
                                        </label>
                                    }
                                    @Html.ValidationMessageFor(x => x.AddressTypeId, "", new { @class = "text-danger text-valid" })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="row">
                                    <div class="form-material">
                                        <div class="col-sm-6">
                                            <div class="form-group has-value">                                                
                                                    @Html.TextBoxFor(x => x.NearLocation, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(x => x.NearLocation, "", new { @class = "text-danger" })
                                                    <label class="floating-label">Landmark</label>                                              
                                               
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group has-value">
                                                @Html.TextBoxFor(x => x.PinNumber, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(x => x.PinNumber, "", new { @class = "text-danger" })
                                                <label class="floating-label">Pincode</label>
                                            </div>
                                        </div>

                                    </div>      

                                </div>


                            </div>
                            </div>
                        </div>
                    <div class="form-material m-t-5">
                        <div class="row">
                            <div class="col-sm-3">
                                <div class="form-group has-value">
                                    @Html.DropDownListFor(x => x.CountryId, Model.CountryList, new { @class = "form-control", onchange = "AjaxWithValue('BindStateJson', 'StateId', this)" })
                                    @Html.ValidationMessageFor(x => x.CountryId, "", new { @class = "text-danger" })
                                    <label class="floating-label t-0">Country</label>
                                </div>
                            </div>
                            

                            <div class="col-sm-3">
                                <div class="form-group has-value">
                                    @Html.DropDownListFor(x => x.StateId, Model.StateList, new { @class = "form-control", onchange = "AjaxWithValue('BindLocationJson', 'CityId', this)" })
                                    @Html.ValidationMessageFor(x => x.StateId, "", new { @class = "text-danger" })
                                    <label class="floating-label  t-0">State</label>
                                </div>
                            </div>


                            <div class="col-sm-3">
                                <div class="form-group has-value">
                                    @Html.DropDownListFor(x => x.CityId, Model.CityList, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.CityId, "", new { @class = "text-danger" })
                                    <label class="floating-label  t-0">City</label>
                                </div>
                            </div>

                        </div>

                    </div>

                </div>



            </div>










