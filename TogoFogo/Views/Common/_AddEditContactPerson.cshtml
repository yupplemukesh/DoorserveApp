@model TogoFogo.Models.ContactPersonModel

@using (Html.BeginForm("AddOrPersonContactDetails", "ManageClients", FormMethod.Post, new { enctype = "multipart/form-data", }))
{
    @Html.HiddenFor(x => x.ContactId)
    @Html.HiddenFor(x=>x.ClientId)
    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConFirstName, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.ConFirstName, new { @class = "form-control", @placeholder = "First Name" })
                @Html.ValidationMessageFor(model => model.ConFirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConLastName, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.ConLastName, new { @class = "form-control", @placeholder = "Last Name" })
                @Html.ValidationMessageFor(model => model.ConLastName, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConMobileNumber, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.ConMobileNumber, new { @class = "form-control", @placeholder = "Mobile number" })
                @Html.ValidationMessageFor(model => model.ConMobileNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConEmailAddress, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.ConEmailAddress, new { @class = "form-control", @placeholder = "Email-Address" })
                @Html.ValidationMessageFor(model => model.ConEmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.IsUser, htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-9">

                    @Html.CheckBoxFor(x => x.IsUser)

                </div>
            </div>
        </div>
        
    </div>


    if (Model.IsUser)
    {

        <div class="form-group" id="userDetails">
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.TextBoxFor(x => x.UserName, new { @class = "form-control", @placeholder = "User name" })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.PasswordFor(x => x.Password, new { @class = "form-control", @placeholder = "Password" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }

    else
    {
        <div class="form-group" id="userDetails" style="display:none">
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.TextBoxFor(x => x.UserName, new { @class = "form-control", @placeholder = "User name" })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.PasswordFor(x => x.Password, new { @class = "form-control", @placeholder = "Password" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

    }


    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConPanNumber, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.ConPanNumber, new { @class = "form-control", @placeholder = "Pan number" })
                @Html.ValidationMessageFor(model => model.ConPanNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConPanNumberFilePath, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.ConPanNumberFilePath, new { @type = "file", @class = "form-control", placeholder = "" })
                @Html.ValidationMessageFor(model => model.ConPanNumberFilePath, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <!-- Text input-->
    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConVoterId, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.ConVoterId, new { @class = "form-control", @placeholder = "Voter Id" })
                @Html.ValidationMessageFor(model => model.ConVoterId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConVoterIdFilePath, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.ConVoterIdFilePath, new { @type = "file", @class = "form-control", placeholder = "" })
                @Html.ValidationMessageFor(model => model.ConVoterIdFilePath, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConAdhaarNumber, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.ConAdhaarNumber, new { @class = "form-control", @placeholder = "Adhaar number" })
                @Html.ValidationMessageFor(model => model.ConAdhaarNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConAdhaarNumberFilePath, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.ConAdhaarNumberFilePath, new { @type = "file", @class = "form-control", placeholder = "" })
                @Html.ValidationMessageFor(model => model.ConAdhaarNumberFilePath, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConAddressType, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(model => model.ConAddressType, Model.AddressTypelist,
 "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConAddressType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConCountry, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(model => model.ConCountry, Model.CountryList, new { @class = "form-control", onchange = "AjaxWithValue('BindStateJson', 'ConState', this)" })
                @Html.ValidationMessageFor(model => model.ConCountry, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConState, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(model => model.ConState, Model.StateList, new { @class = "form-control", onchange = "AjaxWithValue('BindLocationJson', 'ConCity', this)" })
                @Html.ValidationMessageFor(model => model.ConState, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConCity, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(model => model.ConCity, Model.CityList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConCity, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConAddress, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.ConAddress, new { @class = "form-control", @placeholder = "Address" })
                @Html.ValidationMessageFor(model => model.ConAddress, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConLocality, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.ConLocality, new { @class = "form-control", @placeholder = "Locality" })
                @Html.ValidationMessageFor(model => model.ConLocality, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConNearByLocation, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.ConNearByLocation, new { @class = "form-control", @placeholder = "Near by location" })
                @Html.ValidationMessageFor(model => model.ConNearByLocation, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.ConPinNumber, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.ConPinNumber, new { @class = "form-control", @placeholder = "Pin code" })
                @Html.ValidationMessageFor(model => model.ConPinNumber, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    


    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            <div class="input-group pull-right">

                <button type="submit" class="btn btn-success">Submit</button>
            </div>
            </div>
        </div>

        }
        @Scripts.Render("~/bundles/jqueryval")
