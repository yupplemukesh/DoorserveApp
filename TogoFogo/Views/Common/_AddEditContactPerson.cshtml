@model TogoFogo.Models.ContactPersonModel

@using (Html.BeginForm("AddOrPersonContactDetails", "ManageClients", FormMethod.Post, new { enctype = "multipart/form-data", }))
{
    @Html.HiddenFor(x => x.ContactId)
    @Html.HiddenFor(x => x.RefKey)
    @Html.HiddenFor(x => x.Action)
    <div class="form-group">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConFirstName, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.ConFirstName, new { @class = "form-control", @placeholder = "First Name" })
                    </div>
                    @Html.ValidationMessageFor(model => model.ConFirstName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConLastName, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.ConLastName, new { @class = "form-control", @placeholder = "Last Name" })
                    </div>
                    @Html.ValidationMessageFor(model => model.ConLastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConMobileNumber, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.ConMobileNumber, new { @class = "form-control", @placeholder = "Mobile number" })
                    </div>
                    @Html.ValidationMessageFor(model => model.ConMobileNumber, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConEmailAddress, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.ConEmailAddress, new { @class = "form-control", @placeholder = "Email-Address" })
                    </div>
                    @Html.ValidationMessageFor(model => model.ConEmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.IsUser, htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-9">

                    @Html.CheckBoxFor(x => x.IsUser)

                </div>
            </div>
        </div>

    </div>


    @*if (Model.IsUser)
        {

            <div class="form-group" id="userDetails">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.UserName, new { @class = "form-control", @placeholder = "User name" })

                    </div>
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.PasswordFor(x => x.Password, new { @class = "form-control", @placeholder = "Password" })

                    </div>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        else
        {
            <div class="form-group" id="userDetails" style="display:none">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.UserName, new { @class = "form-control", @placeholder = "User name" })

                    </div>
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.PasswordFor(x => x.Password, new { @class = "form-control", @placeholder = "Password" })

                    </div>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

        }*@


    <div class="form-group">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConPanNumber, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.ConPanNumber, new { @class = "form-control", @placeholder = "Pan number" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConPanNumber, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConPanNumberFilePath, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.ConPanNumberFilePath, new { @type = "file", @class = "form-control", placeholder = "" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConPanNumberFilePath, "", new { @class = "text-danger" })
                </div>

            </div>
        </div>
    </div>

    <!-- Text input-->
    <div class="form-group">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConVoterId, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.ConVoterId, new { @class = "form-control", @placeholder = "Voter Id" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConVoterId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConVoterIdFilePath, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.ConVoterIdFilePath, new { @type = "file", @class = "form-control", placeholder = "" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConVoterIdFilePath, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConAdhaarNumber, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.ConAdhaarNumber, new { @class = "form-control", @placeholder = "Adhaar number" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConAdhaarNumber, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConAdhaarNumberFilePath, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.ConAdhaarNumberFilePath, new { @type = "file", @class = "form-control", placeholder = "" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConAdhaarNumberFilePath, "", new { @class = "text-danger" })
                </div>

            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConAddress.AddressTypeId, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.DropDownListFor(model => model.ConAddress.AddressTypeId, Model.ConAddress.AddressTypelist,
         "Select", new { @class = "form-control" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConAddress.AddressTypeId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConAddress.CountryId, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.DropDownListFor(model => model.ConAddress.CountryId, Model.ConAddress.CountryList, new { @class = "form-control", onchange = "AjaxWithValue('BindStateJson', 'ConAddress_StateId', this)" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConAddress.CountryId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConAddress.StateId, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.DropDownListFor(model => model.ConAddress.StateId, Model.ConAddress.StateList, new { @class = "form-control", onchange = "AjaxWithValue('BindLocationJson', 'ConAddress_CityId', this)" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConAddress.StateId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConAddress.CityId, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.DropDownListFor(model => model.ConAddress.CityId, Model.ConAddress.CityList, new { @class = "form-control" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConAddress.CityId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConAddress.Address, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.ConAddress.Address, new { @class = "form-control", @placeholder = "Address" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConAddress.Address, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConAddress.Locality, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.ConAddress.Locality, new { @class = "form-control", @placeholder = "Locality" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConAddress.Locality, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConAddress.NearLocation, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.ConAddress.NearLocation, new { @class = "form-control", @placeholder = "Near by location" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConAddress.NearLocation, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ConAddress.PinNumber, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.TextBoxFor(x => x.ConAddress.PinNumber, new { @class = "form-control", @placeholder = "Pin code" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConAddress.PinNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <div class="row ">

        <div class="ln_solid"></div>
        <div class="form-group">
            <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                <button type="submit" class="btn btn-success">Submit</button>
            </div>
        </div>
    </div>

}
@Scripts.Render("~/bundles/jqueryval")
