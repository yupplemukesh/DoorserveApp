
@using System.Web.UI.WebControls
@model TogoFogo.Models.ManageProblemObserved
@{
                /**/


                Layout = null;
}

@using (Html.BeginForm("EditProblemObserved", "ProblemObserved", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.ProblemId)

<div class="form-group">
    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(model => model.DeviceCategory, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(model => model.Device_Category, null, new { @class = "form-control", onchange = "AjaxWithValue('BindSubCategoryJson', 'EditSubCategory', this)" })
            </div>
            @Html.ValidationMessageFor(model => model.Device_Category, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="form-group">
    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(model => model.SubCategory, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(model => model.SubCategory, null, new { @class = "form-control", id = "EditSubCategory" })
            </div>
            @Html.ValidationMessageFor(model => model.SubCategory, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="form-group">
    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(model => model.ProblemCode, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.ProblemCode, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.ProblemCode, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="form-group">
    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(model => model.ProblemObserved, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.ProblemObserved, htmlAttributes: new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.ProblemObserved, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="form-group">
    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(model => model.SortOrder, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.SortOrder, htmlAttributes: new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
        </div>
    </div>
</div>


<div class="form-group">
    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                @Html.CheckBoxFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>

        <div class="row ">
            <div class="ln_solid"></div>
            <div class="form-group">
                <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                    <button type="submit" class="btn btn-success">Submit</button>
                </div>
            </div>
        </div>
        }


        @if (ViewBag.SortOrder != null)
        {
            <script>
                document.getElementById('SortOrder').value = '@ViewBag.SortOrder';

            </script>
        }
        @Scripts.Render("~/bundles/jqueryval")
