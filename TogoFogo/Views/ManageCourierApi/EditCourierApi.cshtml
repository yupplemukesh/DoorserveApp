
@model TogoFogo.Models.ManageCourierApiModel
@{
    Layout = null;
}

@using (Html.BeginForm("EditCourierApi", "ManageCourierApi", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.API_ID)
    
<span style="font-size: 17px;">Select Courier</span>

<div class="form-group">
    
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
        <div class="input-group">
            <span class="input-group-addon"></span>
            @Html.DropDownListFor(model => model.Country, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.LabelFor(model => model.Courier, htmlAttributes: new { @class = "control-label" })
        <div class="input-group">
            <span class="input-group-addon"></span>
            @Html.DropDownListFor(model => model.Courier, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Courier, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<span style="font-size: 17px;">Courier API Details</span>
        
<div class="form-group">
    
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
        <div class="input-group">
            <span class="input-group-addon"></span>
            @Html.TextBoxFor(model => model.Username, htmlAttributes: new { @class = "form-control", placeholder = "" })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.LabelFor(model => model.Passwrd, htmlAttributes: new { @class = "control-label" })
        <div class="input-group">
            <span class="input-group-addon"></span>
            @Html.TextBoxFor(model => model.Passwrd, htmlAttributes: new { @class = "form-control", placeholder = "" })
            @Html.ValidationMessageFor(model => model.Passwrd, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

        <div class="form-group">
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.AppVersion, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.TextBoxFor(model => model.AppVersion, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.AppVersion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.AccountNo, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.TextBoxFor(model => model.AccountNo, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.AccountNo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.AccountPIN, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.TextBoxFor(model => model.AccountPIN, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.AccountPIN, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.AccountEntity, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.TextBoxFor(model => model.AccountEntity, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.AccountEntity, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.AccountCountryCode, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.TextBoxFor(model => model.AccountCountryCode, htmlAttributes: new { @class = "form-control", placeholder = "" })
                    @Html.ValidationMessageFor(model => model.AccountCountryCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.IsLargePacket, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.DropDownListFor(model => model.IsLargePacket, new List<SelectListItem>
                    {
                        new SelectListItem {Text = "Yes", Value = "Yes"},
                        new SelectListItem {Text = "No", Value = "No"},

                    }, "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IsLargePacket, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>
                    {
                        new SelectListItem {Text = "Yes", Value = "Yes"},
                        new SelectListItem {Text = "No", Value = "No"}

                    }, "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.TextBoxFor(model => model.Comments, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                </div>
                </div>
            </div>

            <div class="row ">
                <div class="ln_solid"></div>
                <div class="form-group">
                    <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                        <button type="submit" class="btn btn-success">Submit</button>
                    </div>
                </div>
            </div>
            }

