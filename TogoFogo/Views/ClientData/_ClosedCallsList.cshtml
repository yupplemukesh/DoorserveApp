@model  IEnumerable<TogoFogo.Models.ClientData.UploadedExcelModel>
@using TogoFogo.Models
@using GridMvc.Html
@{
    @*Layout = null;*@
    int rowNumber = 0;
    int pageSize = 10;
    int pageNumber = Convert.ToInt32(ViewBag.PageNumber);
    if ((pageNumber) > 1)
    {
        rowNumber = (pageSize) * (pageNumber - 1) + rowNumber;
    }
}

<div class="panel-heading">
    <div class="row">
        <div class="col-lg-12">
            <div class="pull-right">
                @if (Permissions.Rights.ExcelExport)
                {
                    using (Html.BeginForm("ExportToExcel", "ClientData", FormMethod.Get))
                    {

                        @Html.Hidden("tabIndex", 'C')
                        <button type="submit" class="tools-icon btn btn-primary btn-sm excel"> Export to Excel</button>
                    }
                }
                @*<button class="btn btn-primary excel">Export to Excel</button>*@
            </div>
        </div>
    </div>
</div>

<div class="x_content" style="overflow-x: scroll;">
    <div class="for-popup-height">
        <div class="code-cut">
            @Html.Grid(Model).Columns(columns =>
        {
                 columns.Add()
                .Titled("#SLN")
                .SetWidth(10)
                .RenderValueAs(o =>
                  {
                      rowNumber++;
                      return @<text> @rowNumber </text>;
                 });
                                                         columns.Add(model => model.CRN).Titled("Call Id")
                                                          .Filterable(true).Sanitized(false).Encoded(false).
  RenderValueAs(model => Html.ActionLink(model.CRN, "ManageServiceProvidersDetails","ServiceCenter", new { CRN = model.CRN },null));
              columns.Add(c => c.IsRepeat).Titled("Is Repeat Call").Filterable(true);
           columns.Add(c => c.CreatedOn).Titled("Date Time").Filterable(true);
           columns.Add(c => c.ClientName).Titled("Client Name").Filterable(true);
           columns.Add(c => c.CustomerName).Titled("Customer Name").Filterable(true);
           columns.Add(c => c.CustomerContactNumber).Titled("Mobile Number").Filterable(true);
           columns.Add(c => c.CustomerEmail).Titled("Email Address").Filterable(true);
           columns.Add(c => c.ServiceTypeName).Titled("Service Types").Filterable(true);
           columns.Add(c => c.DeliveryTypeName).Titled("Service Delivery Types").Filterable(true);
       }).WithPaging(10).Sortable(true)
        </div>
    </div>
</div>
