@model TogoFogo.Models.SubcategoryModel
@{
    Layout = null;
}
@using (Html.BeginForm("AddSubCategory", "Category", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

<div class="col-md-8 col-sm-8 col-lg-8 col-xs-12">
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.CatId, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.DropDownListFor(model => model.CatId, Model.CategoryList ,"Select Category", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CatId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.SubCatName, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.SubCatName, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SubCatName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.IMEILength, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.IMEILength, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IMEILength, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.SRNOLength, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.SRNOLength, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SRNOLength, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.SortOrder, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.SortOrder, htmlAttributes: new { @class = "form-control",  })
            @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextAreaFor(model => model.Comments, htmlAttributes: new { @class = "form-control", @cols = "42", @rows = "2" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.IsRequiredIMEI1, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">           
            @Html.CheckBoxFor(m => m.IsRequiredIMEI1)
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.IsRequiredIMEI2, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">           
            @Html.CheckBoxFor(m => m.IsRequiredIMEI2)
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.IsRequiredSerialNo, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">           
            @Html.CheckBoxFor(m => m.IsRequiredSerialNo)
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.IsRepair, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">            
            @Html.CheckBoxFor(m => m.IsRepair)
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.CheckBoxFor(m => m.IsActive, new { @checked = "checked" })           
        </div>
    </div>

    <div class="ln_solid"></div>
    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
            @*<button class="btn btn-primary" type="button">Cancel</button>*@
            <button class="btn btn-primary" type="reset">Reset</button>
            <button type="submit" class="btn btn-success">Submit</button>
        </div>
    </div>
</div>

}

@if (ViewBag.SortOrder != null)
{
    <script>
        document.getElementById('SortOrder').value = '@ViewBag.SortOrder';
           
    </script>
}