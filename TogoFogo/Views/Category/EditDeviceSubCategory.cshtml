
@model TogoFogo.Models.SubcategoryModel
@{
    Layout = null;
}
@using (Html.BeginForm("EditDeviceSubCategory", "Category", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.SubCatId)
<div class="form-group">
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.LabelFor(model => model.DeviceCategory, htmlAttributes: new { @class = "control-label" })
        <div class="input-group">
            <span class="input-group-addon"></span>
            @Html.DropDownListFor(model => model.DeviceCategory, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DeviceCategory, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.LabelFor(model => model.SubCatName, htmlAttributes: new { @class = "control-label" })
        <div class="input-group">
            <span class="input-group-addon"></span>
            @Html.TextBoxFor(model => model.SubCatName, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SubCatName, "", new { @class = "text-danger" })
        </div>
    </div>
    </div>


<div class="form-group">
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.LabelFor(model => model.IMEILength, htmlAttributes: new { @class = "control-label" })
        <div class="input-group">
            <span class="input-group-addon"></span>
            @Html.TextBoxFor(model => model.IMEILength, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IMEILength, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.LabelFor(model => model.SRNOLength, htmlAttributes: new { @class = "control-label" })
        <div class="input-group">
            <span class="input-group-addon"></span>
            @Html.TextBoxFor(model => model.SRNOLength, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SRNOLength, "", new { @class = "text-danger" })
        </div>
    </div>
</div>


<div class="form-group">
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.LabelFor(model => model.SortOrder, htmlAttributes: new { @class = "control-label" })
        <div class="input-group">
            <span class="input-group-addon"></span>
            @Html.TextBoxFor(model => model.SortOrder, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label" })
        <div class="input-group">
            <span class="input-group-addon"></span>
            @Html.TextBoxFor(model => model.Comments, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>
</div>




    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.IsRequiredIMEI1, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">

                @Html.CheckBoxFor(model => model.IsRequiredIMEI1)
                @Html.ValidationMessageFor(model => model.IsRequiredIMEI1, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.IsRequiredIMEI2, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">

                @Html.CheckBoxFor(model => model.IsRequiredIMEI2)
                @Html.ValidationMessageFor(model => model.IsRequiredIMEI2, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.IsRequiredSerialNo, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">

                @Html.CheckBoxFor(model => model.IsRequiredSerialNo)
                @Html.ValidationMessageFor(model => model.IsRequiredSerialNo, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.IsRepair, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">

                @Html.CheckBoxFor(model => model.IsRepair)
                @Html.ValidationMessageFor(model => model.IsRepair, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">

                @Html.CheckBoxFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>




    <div class="row ">
        <div class="ln_solid"></div>
        <div class="form-group">
            <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                <button type="submit" class="btn btn-success">Submit</button>
            </div>
        </div>
    </div>


    }

