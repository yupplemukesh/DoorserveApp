@model TogoFogo.Models.UserTypeModel


@using (Html.BeginForm("EditUserType1", "Master", FormMethod.Post, new { onSubmit = "return checkSubmit()", id = "form11" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.UserTypeId)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-8">
            <div class="row" style="padding-bottom: 5px">
                <div class="col-md-4">

                    @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "" })
                </div>
                <div class="col-md-8">

                    @Html.TextBoxFor(model => model.UserType, htmlAttributes: new { @class = "form-control", placeholder = "Enter Brand Name" })
                    @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                <div class="col-md-4">

                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "" })
                </div>
                <div class="col-md-8">

                    @Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>
             {
                 new SelectListItem {Text = "Yes", Value = "Yes"},
                 new SelectListItem {Text = "No", Value = "No"}

             }, "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                <div class="col-md-4">

                    @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "" })
                </div>
                <div class="col-md-8">

                    @Html.TextBoxFor(model => model.ModifiedDate, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="padding-bottom: 5px">
                <div class="col-md-4">

                    @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "" })
                </div>
                <div class="col-md-8">

                    @Html.TextAreaFor(model => model.Comments, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row text-center">
                <input type="submit" value="Submit" class="btn btn-large btn-success" />
            </div>

        </div>
    </div>

}
