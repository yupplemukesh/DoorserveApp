@model TogoFogo.Models.UserActionRights
@{
    ViewBag.Title = "Product";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<div class="panel-heading">
    <div class="row">
        <div class="col-lg-12">
            <div class="col-md-6">
                <h3 class="m-y-0">Add Product</h3>
            </div>
            <div class="col-md-6 ">
                <div class="pull-right">
                    @if (Model.ExcelExport)
                    {
                    <button class="btn btn-primary excel">Export to Excel</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="panel-body">
    @if (Model.Create)
    {
    @Html.Action("AddProduct", "Master")
    }
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    @*<h2>List Of All Products<small></small></h2>*@
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>

                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">

                    @if (Model.View)
                    {
                    @Html.Action("ProductTable", "Master")
                    }
                </div>
            </div>
        </div>

    </div>
</div>
    

    
    <div class="modal fade" id="Editmodel" tabindex="-1" role="dialog">
        <div class="modal-dialog">

            Modal content
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edit Product</h4>
                </div>
                <div class="modal-body" id="modelProduct">
                @if (Model.Edit)
                {
                @Html.Action("EditProduct", "Master")
                }
                </div>

            </div>

        </div>
    </div>
    @if (ViewBag.AddProduct != null)
    {
        <div id="snackbar">@ViewBag.AddProduct</div>
    }
    @if (ViewBag.EditProduct != null)
    {
        <div id="snackbar">@ViewBag.EditProduct</div>
    }

    @section Scripts{
        <script>
            function EditProduct(ProductId, Brand_ID, ProductName, Category_ID) {
                $.ajax({

                    type: 'GET',
                    url: "/Master/EditProduct?ProductId=" + ProductId + "&BrandID=" + Brand_ID + "&ProductName=" + ProductName + "&CategoryID=" + Category_ID,
                    contentType: 'application/json; charset=utf-8',
                    cache: false,
                    success: function (response) {
                        $("#modelProduct").html(response);
                    },
                    error: function (e) {
                        console.log(e);
                        $(".submitbutton").attr("disabled", false);
                        alert("Something went wrong...");

                    },
                    complete: function () {

                        $(".submitbutton").attr("disabled", false);
                    }
                });
            }
            function AjaxWithValue(method, ddl, e) {
                var val = e.value;
                debugger;
                $.ajax({
                    type: "GET",
                    url: "/DropdownBind/" + method + "?value=" + val,
                    data: '{}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        $("#" + ddl).empty();

                        //var sel = new Option('-Select-', '');
                        //$('#' + ddl).append(sel);
                        for (var i = 0; i < data.length; i++) {
                            var opt = new Option(data[i].Text, data[i].Value);
                            $('#' + ddl).append(opt);
                        }
                    }
                });
            }
            function isNumber(evt) {
                evt = (evt) ? evt : window.event;
                var charCode = (evt.which) ? evt.which : evt.keyCode;
                if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                    return false;
                }
                return true;
            }
        </script>
        @if (ViewBag.AddProduct != null || ViewBag.EditProduct != null)
        {
            <script>

                var x = document.getElementById("snackbar");
                x.className = "show";
                setTimeout(function () { x.className = x.className.replace("show", ""); }, 3000);

            </script>
        }

    }
