@model TogoFogo.Models.ColorModel
@{
    Layout = null;
}



@using (Html.BeginForm("EditColorMaster", "Master", FormMethod.Post))
{
    @Html.HiddenFor(model => model.ColorId)



    @*<div class="row" style="padding-bottom: 5px;">
            @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">

                @Html.ListBoxFor(model => model.pd, null, new { id = "Model", @class = "selectpicker", multiple = "multiple", data_live_search = "true", data_actions_box = "true", data_width = "100%" })
                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })


            </div>
        </div>*@
<div class="form-group">
    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(model => model.ColorName, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(model => model.ColorName, htmlAttributes: new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.ColorName, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="form-group">
    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextAreaFor(model => model.Comments, htmlAttributes: new { @class = "form-control", @cols = "42", @rows = "2" })
            </div>
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>
</div>


<div class="form-group">
    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
            @Html.CheckBoxFor(model => model.IsActive, new { @checked = "checked" })
        </div>
    </div>
</div>


        <div class="row ">
            <div class="ln_solid"></div>
            <div class="form-group">
                <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                    <button type="submit" class="btn btn-success">Submit</button>
                </div>
            </div>
        </div>


        }

        @Scripts.Render("~/bundles/jqueryval")


