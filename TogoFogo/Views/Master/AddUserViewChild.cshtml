
@model TogoFogo.Models.User1


@using (Html.BeginForm("AddNewUser1", "Master", FormMethod.Post, new { onSubmit = "return checkSubmit()", id = "form11" }))
{
    @Html.AntiForgeryToken()
<div class="col-md-12 col-sm-12 col-lg-12 col-xs-12">
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.EmployeeId, htmlAttributes: new { @class = "form-control", @onchange = "remoteValidation()" })
            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.Mobile, htmlAttributes: new { @class = "form-control", @maxlength = "10" })
            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.Email_Address, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.Email_Address, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email_Address, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.AddressType, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.DropDownListFor(model => model.AddressType, new List<SelectListItem>
              {
                  new SelectListItem {Text = "Home", Value = "Home"},
                  new SelectListItem {Text = "Office", Value = "Office"},
                  new SelectListItem {Text = "Other", Value = "Other"},

              },"Select",  new { @class="form-control"})
            @Html.ValidationMessageFor(model => model.AddressType, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.Address, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.Pincode, htmlAttributes: new { @class = "form-control", onblur = "BindCityAndSate()" })
            @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.City, htmlAttributes: new { @class = "form-control", id = "City" })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.State, htmlAttributes: new { @class = "form-control", id = "State" })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.DropDownListFor(model => model.UserType, null, "Select", new { @class = "form-control", onchange = "AjaxWithValue('BindSubRoleJson', 'UserRole', this)" })
            @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.UserRole, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.DropDownListFor(model => model.UserRole, null, "Select", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserRole, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.UserName, htmlAttributes: new { @class = "form-control", @onchange = "remoteValidation()" })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">

            @Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>
               {
                   new SelectListItem {Text = "Yes", Value = "Yes"},
                   new SelectListItem {Text = "No", Value = "No"}

               },  new { @class="form-control", onchange = "showDiv1(this)" })
            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="row" style="padding-bottom: 5px;">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "col-md-3 col-md-offset-1 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.Comments, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="ln_solid"></div>
    <div class="form-group">
        <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">

            <button type="submit" class="btn btn-success">Submit</button>
        </div>
    </div>
</div>

}

