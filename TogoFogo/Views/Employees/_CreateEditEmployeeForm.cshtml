@model TogoFogo.Models.EmployeeModel
@using TogoFogo.Models
<div class="form-group row">
    <div class="col-md-12">
        @if (Model.IsProvider)
        {
            if (SessionModel.UserRole.Contains("Service Provider SC Admin"))
            {
                @Html.HiddenFor(x=>x.ProviderId)
            }
            else
            {
            <div class="col-md-6 col-sm-6">

                <label class=" control-label" for="form-control-9">Service Center</label>

                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.DropDownListFor(x => x.CenterId, Model.CenterList, "Select", new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(x => x.CenterId, "", new { @class = "text-danger" })
            </div>
            }

        }
        @if (Model.IsCenter)
        {
            @Html.HiddenFor(x => x.CenterId)
        }
        @if (!Model.IsProvider && !Model.IsCenter)
        {
            <div class="col-md-6 col-sm-6">
                <label class=" control-label" for="form-control-9"> Service Provider</label>
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.DropDownListFor(x => x.ProviderId, Model.ProviderList, "Select", new { @class = "form-control",
                   onchange = "AjaxWithValue('JsonCentersByProvider', 'CenterId', this)"
               })
                </div>
                @Html.ValidationMessageFor(x => x.ProviderId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6 col-sm-6">
                <label class=" control-label" for="form-control-9">Service Center</label>
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.DropDownListFor(x => x.CenterId, Model.CenterList, "Select", new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(x => x.CenterId, "", new { @class = "text-danger" })
            </div>
        }
    </div>
</div>
<div class="form-group row">
    <div class="col-md-12">

        <div class="col-md-6 col-sm-6">
            <label class=" control-label" for="form-control-9">Engineer Code</label>
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.EmpCode, new { @class = "form-control", @placeholder = "Engineer Code" })
            </div>
            @Html.ValidationMessageFor(x => x.EmpCode, "", new { @class = "text-danger" })
        </div>

    </div>
</div>


<div class="form-group row">
    <div class="col-md-12">
        <div class="col-md-6 col-sm-6">
            <label class=" control-label" for="form-control-9">Engineer Type</label>
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(x => x.EngineerTypeId, Model.EngineerTypeList, "Select", new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(x => x.EngineerTypeId, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-5 col-sm-5">
            <label class=" control-label" for="form-control-9">Engineer Photo</label>
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.EMPPhoto1, new { @class = "form-control", @type = "File" })
            </div>
            @Html.ValidationMessageFor(x => x.EMPPhoto1, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-1 col-sm-1">
            @if (!string.IsNullOrEmpty(Model.EMPPhoto))
            {
                <img src="@Model.EMPPhotoUrl" class="a" style="pointer-events: none;width:60px;">
            }
            else
            {
                <img src="~/Content/img/avatars/engineer.png" class="a" style="pointer-events: none;width:60px;">
            }
        </div>
    </div>
</div>
<div class="form-group row">
    <div class="col-md-12">
        <div class="col-md-6 col-sm-6">
            <label class=" control-label" for="form-control-9">Department</label>
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(x => x.DepartmentId, Model.DepartmentList, "Select", new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(x => x.DepartmentId, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6">
            <label class=" control-label" for="form-control-9">Designation</label>
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(x => x.DesignationId, Model.DeginationList, "Select", new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(x => x.DesignationId, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="form-group row">
    <div class="col-md-12">
        <div class="col-md-6 col-sm-6">
            <label class=" control-label" for="form-control-9"> Date of Joining</label>
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.EMPDOJ, "{0:yyyy-MM-dd}", new { @class = "form-control", @placeholder = "", @type = "date" })
            </div>
            @Html.ValidationMessageFor(x => x.EMPDOJ, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6">
            <label class=" control-label" for="form-control-9">Date Of Birth</label>
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.EMPDOB, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
            </div>
            @Html.ValidationMessageFor(x => x.EMPDOB, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
@Html.Partial("_EmployeeContactPerson", Model)
<div class="form-group row">
    <div class="col-md-12">
        <div class="col-md-6 col-sm-6">
            <label class=" control-label" for="form-control-9">Can pick Up?</label>
            <div class="input-group">
                <label class="custom-control custom-control-primary custom-checkbox active">
                    @Html.CheckBoxFor(x => x.IsPickUp, new { @class = "custom-control-input" })
                    <span class="custom-control-indicator"></span>
                </label>
            </div>
        </div>
        <div class="col-md-6 col-sm-6">

            <label class="control-label" for="form-control-9">Is Active </label>

            <div class="input-group">
                <label class="custom-control custom-control-primary custom-checkbox active">
                    @Html.CheckBoxFor(x => x.IsActive, new { @class = "custom-control-input" })
                    <span class="custom-control-indicator"></span>

                </label>
            </div>
        </div>
    </div>
</div>
<div class="form-group row">
    <div class="col-md-12">
        <div class="col-md-6 col-sm-6">
            <label class=" control-label" for="form-control-9">Vehicle Type</label>
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.DropDownListFor(x => x.Vehicle.VHTypeId, Model.Vehicle.VehicleTypeList, "Select", new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(x => x.Vehicle.VHTypeId, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6 col-sm-6">
            <label class=" control-label" for="form-control-9">Vehicle Brand</label>
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.Vehicle.VehicleBrand, "", new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(x => x.Vehicle.VehicleBrand, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="form-group row">
    <div class="col-md-12">
        <div class="col-md-6 col-sm-6">
            <label class=" control-label" for="form-control-9">Vehicle Modal</label>
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.Vehicle.VHModel, new { @class = "form-control", @placeholder = "Vehicle Model" })
            </div>
            @Html.ValidationMessageFor(x => x.Vehicle.VHModel, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-sm-6">
            <label class=" control-label" for="form-control-9">Vehicle Number</label>
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.Vehicle.VHNumber, new { @class = "form-control", @placeholder = "Vehicle Model" })
            </div>
            @Html.ValidationMessageFor(x => x.Vehicle.VHNumber, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="form-group row">
    <div class="col-md-12">
        <div class="col-md-6 col-sm-6">
            <label class=" control-label" for="form-control-9">Driving License</label>
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.Vehicle.DrivingLicense, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(x => x.Vehicle.DrivingLicense, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6 col-sm-6">
            <label class=" control-label" for="form-control-9">Insurance Expairy Date</label>
            <div class="input-group">
                <span class="input-group-addon"></span>
                @Html.TextBoxFor(x => x.Vehicle.InsuranceExpairyDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
            </div>
            @Html.ValidationMessageFor(x => x.Vehicle.InsuranceExpairyDate, "", new { @class = "text-danger" })
        </div>

    </div>
</div>
<script>
    function AjaxWithValue(method, ddl, e) {
        var val = e.value;
        if (ddl == "StateId")
            $("#CityId").empty();
        if (ddl == "CenterId")
            $("#CenterId").empty();
        $.ajax({
            type: "GET",
            url: "/DropdownBind/" + method + "?value=" + val,
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $("#" + ddl).empty();
                for (var i = 0; i < data.length; i++) {
                    var opt = new Option(data[i].Text, data[i].Value);
                    $('#' + ddl).append(opt);
                }
            }
        });
    }

</script>
