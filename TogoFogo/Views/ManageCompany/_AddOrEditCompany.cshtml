@model TogoFogo.Models.Company.CompanyModel

<div class="form-group row">

    <label class="col-sm-4 control-label" for="form-control-1">Company Type</label>
    <div class="col-sm-8">
        @Html.DropDownListFor(x => x.CompanyTypeId, Model.CompanyTypeList, "Select", new { @class = "form-control input-md", })
        @Html.ValidationMessageFor(model => model.DomainExpiryDate, "", new { @class = "text-danger" })
    </div>
    </div>

    <div class="form-group row">

        <label class="col-sm-4 control-label" for="form-control-1">Company Code</label>
        <div class="col-sm-3">
            @Html.TextBoxFor(x => x.CompanyCode, new { @class = "form-control input-md", })
            @Html.ValidationMessageFor(model => model.DomainExpiryDate, "", new { @class = "text-danger" })
        </div>
        <label class="col-sm-2 control-label" for="form-control-1">Company Name</label>
        <div class="col-sm-3">
            @Html.TextBoxFor(x => x.CompanyName, new { @class = "form-control input-md" })
            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <label class="col-sm-4 control-label" for="form-control-1">Company Website Domain Name</label>
        <div class="col-sm-3">
            @Html.TextBoxFor(x => x.CompanyWebsiteDomainName, new { @class = "form-control input-md" })
            @Html.ValidationMessageFor(model => model.CompanyWebsiteDomainName, "", new { @class = "text-danger" })
        </div>

        <label class="col-sm-2 control-label" for="form-control-1">Domain Expiry Date</label>
        <div class="col-sm-3">
            @Html.TextBoxFor(x => x.DomainExpiryDate, "{0:yyyy-MM-dd}",  new { @class = "form-control input-md", @type = "date"  })
            @Html.ValidationMessageFor(model => model.DomainExpiryDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-4 control-label" for="form-control-1">Company Logo</label>
        <div class="col-sm-6">
            @Html.TextBoxFor(model => model.CompanyPath, htmlAttributes: new { @type = "file", @class = "form-control", @onchange = "readURL(this);", accept = "image/*" })
            @Html.ValidationMessageFor(model => model.CompanyPath, "", new { @class = "text-danger" })
        </div>
        <div class="col-sm-2">
            @if (!string.IsNullOrEmpty(Model.CompanyFile))
            {
                <img id="blah" src="@Model.CompanyFile" width="40" height="40" alt="your image" />
            }
            else
            {
                <img id="blah" src="~/Images/male-user-add.png" width="40" height="40" alt="your image" />
            }
        </div>

    </div>

    <div class="form-group row">
        <label class="col-sm-4 control-label" for="form-control-1">Anroid App Name</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.AndroidAppName, new { @class = "form-control input-md" })
            @Html.ValidationMessageFor(model => model.AndroidAppName, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group row">

        <label class="col-sm-4 control-label" for="form-control-1">Anroid App Setting</label>
        <div class="col-sm-8">
            @Html.TextAreaFor(x => x.AndroidAppSetting, new { @class = "form-control input-md", @placeholder = "Anroid App Setting" })
            @Html.ValidationMessageFor(model => model.AndroidAppSetting, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">

        <label class="col-sm-4 control-label" for="form-control-1">IOS App Name</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.IOSAppName, new { @class = "form-control input-md" })
            @Html.ValidationMessageFor(model => model.IOSAppName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">

        <label class="col-sm-4 control-label" for="form-control-1">IOS App Setting</label>
        <div class="col-sm-8">
            @Html.TextAreaFor(x => x.IOSAppSetting, new { @class = "form-control input-md", @placeholder = "IOS App Setting" })
            @Html.ValidationMessageFor(model => model.IOSAppSetting, "", new { @class = "text-danger" })
        </div>
    </div>




