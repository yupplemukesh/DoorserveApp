@model TogoFogo.Models.ServiceProviderModel
@{
    var cs = "";
    if (Model.Activetab == "tab-1")
    {
        cs = "active in";
    }


}

@Html.HiddenFor(x => x.Path)
<div class="row">
    <div class="col-md-2">

        <ul class="nav nav-tabs m-b-15 tabs-left">
            @if (Model.action == 'I')
            {
                if (Model.Activetab == "tab-1")
                {
                    <li class="active">
                        <a href="#tab-1" id="tab1" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-library zmdi-hc-fw"></i> Website
                        </a>
                    </li>
                    <li>
                        <a href="#tab-2" class="disabled" id="tab2" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-delicious zmdi-hc-fw"></i>Organization
                        </a>
                    </li>
                    <li>
                        <a href="#tab-3" class="disabled" id="tab3" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-accounts zmdi-hc-fw"></i>Address and Contact Person
                        </a>
                    </li>
                    <li>
                        <a href="#tab-4" class="disabled" id="tab4" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-accounts-add zmdi-hc-fw"></i>Bank Details
                        </a>
                    </li>
                    <li>
                        <a href="#tab-5" class="disabled" id="tab5" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-texture zmdi-hc-fw"></i>Registration
                        </a>
                    </li>
                }

                else if (Model.Activetab == "tab-2")
                {
                    <li>
                        <a href="#tab-1" id="tab1" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-library zmdi-hc-fw"></i> Website
                        </a>
                    </li>
                    <li class="active">
                        <a href="#tab-2" id="tab2" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-delicious zmdi-hc-fw"></i>Organization
                        </a>
                    </li>
                    <li>
                        <a href="#tab-3" class="disabled" id="tab3" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-accounts zmdi-hc-fw"></i>Address and Contact Person
                        </a>
                    </li>
                    <li>
                        <a href="#tab-4" class="disabled" id="tab4" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-accounts-add zmdi-hc-fw"></i>Bank Details
                        </a>
                    </li>
                    <li>
                        <a href="#tab-5" class="disabled" id="tab5" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-texture zmdi-hc-fw"></i>Registration
                        </a>
                    </li>
                }


                else if (Model.Activetab == "tab-3")
                {

                    <li>
                        <a href="#tab-1" id="tab1" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-library zmdi-hc-fw"></i> Website
                        </a>
                    </li>
                    <li>
                        <a href="#tab-2" id="tab2" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-delicious zmdi-hc-fw"></i>Organization
                        </a>
                    </li>
                    <li class="active">
                        <a href="#tab-3" id="tab3" role="tab" data-toggle="tab" aria-expanded="true">
                            <i class="zmdi zmdi-accounts zmdi-hc-fw"></i>Address and Contact Person
                        </a>
                    </li>
                    <li>
                        <a href="#tab-4" class="disabled" id="tab4" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-accounts-add zmdi-hc-fw"></i>Bank Details
                        </a>
                    </li>
                    <li>
                        <a href="#tab-5" class="disabled" id="tab5" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-texture zmdi-hc-fw"></i>Registration
                        </a>
                    </li>

                }

                else if (Model.Activetab == "tab-4")
                {

                    <li>
                        <a href="#tab-1" id="tab1" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-library zmdi-hc-fw"></i> Website
                        </a>
                    </li>
                    <li>
                        <a href="#tab-2" id="tab2" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-delicious zmdi-hc-fw"></i>Organization
                        </a>
                    </li>
                    <li>
                        <a href="#tab-3" id="tab3" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-accounts zmdi-hc-fw"></i>Address and Contact Person
                        </a>
                    </li>
                    <li class="active">
                        <a href="#tab-4" id="tab4" role="tab" data-toggle="tab" aria-expanded="true">
                            <i class="zmdi zmdi-accounts-add zmdi-hc-fw"></i>Bank Details
                        </a>
                    </li>
                    <li>
                        <a href="#tab-5" class="disabled" id="tab5" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-texture zmdi-hc-fw"></i>Registration
                        </a>
                    </li>
                }


                else if (Model.Activetab == "tab-5")
                {

                    <li>
                        <a href="#tab-1" id="tab1" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-library zmdi-hc-fw"></i> Website
                        </a>
                    </li>
                    <li>
                        <a href="#tab-2" id="tab2" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-delicious zmdi-hc-fw"></i>Organization
                        </a>
                    </li>
                    <li>
                        <a href="#tab-3" id="tab3" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-accounts zmdi-hc-fw"></i>Address and Contact Person
                        </a>
                    </li>
                    <li>
                        <a href="#tab-4" id="tab4" role="tab" data-toggle="tab">
                            <i class="zmdi zmdi-accounts-add zmdi-hc-fw"></i>Bank Details
                        </a>
                    </li>
                    <li class="active">
                        <a href="#tab-5" id="tab5" role="tab" data-toggle="tab" aria-expanded="true">
                            <i class="zmdi zmdi-texture zmdi-hc-fw"></i>Registration
                        </a>
                    </li>
                }

            }
            else
            {

                <li class="active">
                    <a href="#tab-1" id="tab1" role="tab" data-toggle="tab">
                        <i class="zmdi zmdi-library zmdi-hc-fw"></i> Website
                    </a>
                </li>
                <li>
                    <a href="#tab-2" id="tab2" role="tab" data-toggle="tab">
                        <i class="zmdi zmdi-delicious zmdi-hc-fw"></i>Organization
                    </a>
                </li>
                <li>
                    <a href="#tab-3" id="tab3" role="tab" data-toggle="tab">
                        <i class="zmdi zmdi-accounts zmdi-hc-fw"></i>Address and Contact Person
                    </a>
                </li>

                <li>
                    <a href="#tab-4" id="tab4" role="tab" data-toggle="tab">
                        <i class="zmdi zmdi-accounts-add zmdi-hc-fw"></i>Bank Details
                    </a>
                </li>

                <li>
                    <a href="#tab-5" id="tab5" role="tab" data-toggle="tab">
                        <i class="zmdi zmdi-texture zmdi-hc-fw"></i>Registration
                    </a>
                </li>

            }

        </ul>
    </div>

    <div class="col-md-10">
        <div class="tab-content tab-content responsive">

            <div class="tab-pane fade in @cs" id="tab-1">
                <div class="container-fluid tab-form-control">
                    <div class="row">
                        @using (Html.BeginForm("AddorEditServiceProvider", "ManageServiceProviders", FormMethod.Post, new { enctype = "multipart/form-data", id = "contactform" }))
                        {
                            @Html.HiddenFor(x => x.ProviderId)
                            @Html.HiddenFor(x => x.action)
                            @Html.HiddenFor(x => x.CurrentProviderName)
                            <div class="col-12 col-sm-12 col-md-12 col-lg-12 ">

                                <!-- Select Basic -->
                                <div class=" row form-group">
                                    <label class="col-md-3 control-label" for="selectbasic">Process Name	</label>
                                    <div class="col-md-9">
                                        @Html.DropDownListFor(model => model.ProcessId, Model.ProcessList, "Select", new { @class = "form-control" })
                                        @*@Html.TextBoxFor(model => model.ProcessName, htmlAttributes: new { @class = "form-control", placeholder = "",@readonly="readonly" })*@
                                        @Html.ValidationMessageFor(model => model.ProcessId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <!-- Text input-->
                                <div class=" row form-group">
                                    <label class="col-md-3 " for="textinput">Service Provider Code</label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.ProviderCode, new { @class = "form-control input-md", @placeholder = "Service Provider Code" })
                                        @Html.ValidationMessageFor(model => model.ProviderCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <!-- Text input-->
                                <div class=" row form-group">
                                    <label class="col-md-3 " for="textinput">Service Provider Name</label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.ProviderName, new { @class = "form-control input-md", @placeholder = "Service Provider Name" })
                                        @Html.ValidationMessageFor(model => model.ProviderName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row form-group" id="serviceDelType">
                                    @*@Html.HiddenFor(x=>x.ServiceDeliveryType)*@
                                    <!-- Multiple Radios (inline) -->
                                    <label class="col-md-3 control-label" for="radios">Service Delivery Type</label>
                                    <div class="col-md-9">
                                        <div class="row">

                                            @for (int x = 0; x < Model.DeliveryServiceList.Count(); x++)
                                            {
                                                <div class="col-md-3">
                                                    <label class="" for="radios-0">
                                                        @Html.CheckBoxFor(p => p.DeliveryServiceList[x].IsChecked)
                                                        @Html.HiddenFor(p => p.DeliveryServiceList[x].Text)
                                                        @Model.DeliveryServiceList[x].Text
                                                        @Html.HiddenFor(p => p.DeliveryServiceList[x].Value)


                                                    </label>

                                                </div>
                                            }
                                        </div>

                                        <div class="row col-md-12">
                                            @Html.ValidationMessageFor(x => x.DeliveryServiceList, "", new { @class = "text-danger" })

                                        </div>


                                    </div>


                                </div>
                                <div class="row form-group">
                                    <label class="col-md-3 control-label" for="selectbasic">Supported Device Category	</label>
                                    <div class="col-md-9">
                                        @Html.ListBoxFor(model => model.DeviceCategories, Model.SupportedCategoryList, htmlAttributes: new { @class = "selectpicker form-control", multiple = "multiple", data_actions_box = "true", data_width = "100%", @data_val = "true", @data_val_required = "choose is device category" })
                                        @Html.ValidationMessageFor(model => model.DeviceCategories, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row form-group">
                                    <!-- Multiple Radios (inline) -->
                                    @*@Html.HiddenFor(x => x.ServiceType)*@
                                    <label class="col-md-3 control-label" for="radios">Service Type</label>
                                    <div class="col-md-9">
                                        <div class="row">
                                            @for (int x = 0; x < Model.ServiceList.Count(); x++)
                                            {
                                                <div class="col-md-3">
                                                    <label class="" for="radios-0">
                                                        @Html.CheckBoxFor(p => p.ServiceList[x].IsChecked)
                                                        @Html.HiddenFor(p => p.ServiceList[x].Text)
                                                        @Model.ServiceList[x].Text
                                                        @Html.HiddenFor(p => p.ServiceList[x].Value)

                                                    </label>

                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="row col-md-12">
                                        @Html.ValidationMessageFor(x => x.ServiceList, "", new { @class = "text-danger" })

                                    </div>
                                </div>


                                <div class="row form-group pull-right">
                                    @if (Model.action == 'I')
                                    {
                                        <button type="button" class="btn btn-primary reset">RESET</button>
                                    }
                                    <button class="btn btn-primary">
                                        SAVE

                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                </div>




            </div>
            <div class="tab-pane fade" id="tab-2">



                <!-- <h2> Address and Contact Person</h2>-->

                <div class="container-fluid tab-form-control">
                    <div class="row">
                        @using (Html.BeginForm("AddorEditOrganization", "ManageServiceProviders", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {

                            @Html.HiddenFor(x => x.ProviderId)
                            @Html.HiddenFor(x => x.action)
                            <div class="col-12 col-sm-12 col-md-12 col-lg-12 ">
                                @Html.Partial("~/Views/common/_AddOrEditOrginazation.cshtml", Model.Organization)
                                <div class="row form-group pull-right">
                                    @if (Model.action == 'I')
                                    {
                                        <button type="button" class="btn btn-primary reset">RESET</button>
                                    }
                                    <button type="submit" class="btn btn-primary">
                                        SAVE
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                </div>



            </div>
            <div class="tab-pane fade" id="tab-3">
                <div class="container-fluid tab-form-control">
                    <div class="col-12 col-sm-12 col-md-12 col-lg-12 ">
                        <div class="row margin-bottom-sm">
                            <div class="col-12 pull-right align-text-top  ">
                                <input type="button" class="btn btn-primary " id="AddContactPerson" value="add  Contact" />
                            </div>

                        </div>
                        <div class="row">


                            @if (Model.ContactPersons != null)
                            {
                                <div class="col-12">

                                    @Html.Partial("~/Views/Common/_ContactDetails.cshtml", Model.ContactPersons)
                                    <div class="row" style="display:none" id="ContactPerson">
                                        @using (Html.BeginForm("AddOrPersonContactDetails", "ManageServiceProviders", FormMethod.Post, new { enctype = "multipart/form-data", id = "contactform" }))
                                        {
                                            Model.Contact.IsSingleCenter = Model.Organization.IsSingleCenter;
                                            Model.Contact.RefKey = Model.ProviderId;
                                            <div class="col-12">
                                                @Html.Partial("~/Views/Common/_AddEditContactPerson.cshtml", Model.Contact)
                                            </div>
                                            <div class="form-group row m-b-25">
                                                <div class="col-sm-offset-11  col-md-1">
                                                    <button type="submit" class="btn btn-success" style="">Save</button>
                                                </div>
                                            </div>
                                        }
                                    </div>

                                </div>
                            }

                        </div>
                    </div>

                </div>
            </div>


            <div class="tab-pane fade" id="tab-4">
                <!--<h2>Bank Details</h2>-->
                <div class="container-fluid tab-form-control">

                    <div class="col-12 col-sm-12 col-md-12 col-lg-12 ">
                        <div class="row margin-bottom-sm">
                            <div class="col-12 pull-right align-text-top  ">
                                <input type="button" class="btn btn-primary" id="AddBankAccount" value="add  Bank" />
                            </div>

                        </div>
                        <div class="row" id="bankDetails">

                            @if (Model.BankDetails != null)
                            {
                                <div class="col-12">
                                    @Html.Partial("~/Views/Common/_bankDetails.cshtml", Model.BankDetails)

                                    <div class="row" style="display:none" id="BankAccount">
                                        @using (Html.BeginForm("AddOrEditBank", "ManageServiceProviders", FormMethod.Post, new { enctype = "multipart/form-data", id = "contactform" }))
                                        {
                                            Model.Bank.RefKey = Model.ProviderId;
                                            <div class="col-12">
                                                @Html.Partial("~/Views/Common/_AddOrUpdateBankDetails.cshtml", Model.Bank)
                                            </div>

                                            <div class="form-group row m-b-25">
                                                <div class="col-sm-offset-11  col-md-1">
                                                    <button type="submit" class="btn btn-success" style="">Save</button>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }

                        </div>
                    </div>





                </div>
            </div>

            <div class="tab-pane fade" id="tab-5">

                <!--<h2>Registration</h2>-->

                <div class="container-fluid tab-form-control">
                    <div class="row">
                        <div class="col-12 col-sm-12 col-md-12 col-lg-12 ">
                            @using (Html.BeginForm("AddOrEditClientReg", "ManageServiceProviders", FormMethod.Post, new { enctype = "multipart/form-data", id = "contactform" }))
                            {
                                @Html.HiddenFor(x => x.ProviderId)
                                @Html.HiddenFor(x => x.action)
                                @Html.HiddenFor(x => x.CurrentUserName)
                                <!-- Select Basic -->
                                <div class="row form-group">
                                    <label class="col-md-3 control-label" for="selectbasic">
                                        Is Active?
                                    </label>
                                    <div class="col-md-9">

                                        @Html.CheckBoxFor(x => x.IsActive)

                                    </div>

                                </div>


                                <!-- Text input-->
                                <div class=" row form-group ">
                                    <label class="col-md-3 " for="textinput">Comments</label>
                                    <div class="col-md-9">
                                        @Html.TextAreaFor(x => x.Remarks, new { @class = "form-control input-md" })
                                    </div>
                                </div>

                                <div class="row form-group pull-right">
                                    @if (Model.action == 'I')
                                    {
                                        <button type="button" class="btn btn-primary reset">RESET</button>
                                    }

                                    <button class="btn btn-primary">
                                        SAVE

                                    </button>
                                </div>

                            }

                        </div>

                    </div>
                </div>


            </div>
        </div>
    </div>

</div>



@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<script>
    var DivName = $('.nav-tabs .active a').attr('href');
    activaTab(DivName);

    function activaTab(tab) {

        $(tab).addClass("active in");
    };
    $("#AddContactPerson").click(function () {
        $('#ContactPerson').find(':input,select').each(function () {
            debugger
            switch (this.type) {
                case 'button':
                case 'text':
                case 'submit':
                case 'password':
                case 'file':
                case 'email':
                case 'date':
                case 'number':
                    $(this).val('');
                    break;
                case 'select-one':
                    $(this).val('');
                    break;
                case 'checkbox':
                case 'radio':
                    this.checked = false;
                    break;
            }

            $("#ContactId").val('');

        })
        $("#ContactPerson").show();
    });

    $(".reset").click(function () {
        $(this).closest('form').find("input[type=text], textarea,select").val("");
        $("#ConCity").empty();
        $("#ConState").empty();
        $(this).closest('form').find("input[type=checkbox]").prop('checked', false);
        $('.selectpicker').selectpicker('refresh');
    });
    $("#AddBankAccount").click(function () {

        $('#BankAccount').find(':input,select').each(function () {
            debugger
            switch (this.type) {
                case 'button':
                case 'text':
                case 'submit':
                case 'password':
                case 'file':
                case 'email':
                case 'date':
                case 'number':
                    $(this).val('');
                    break;
                case 'select-one':
                    $(this).val('');
                    break;
                case 'checkbox':
                case 'radio':
                    this.checked = false;
                    break;
            }

            $("#bankId").val('');

        })

        $("#BankAccount").show();
    });
    function AjaxWithValue(method, ddl, e) {
        var val = e.value;
        var other = e.Other;
        console.log(other);
        $.ajax({
            type: "GET",
            url: "/DropdownBind/" + method + "?value=" + val,
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $("#" + ddl).empty();

                //var sel = new Option('-Select-', '');
                //$('#' + ddl).append(sel);
                for (var i = 0; i < data.length; i++) {
                    var opt = new Option(data[i].Text, data[i].Value);
                    $('#' + ddl).append(opt);
                }

                if (other != undefined) {
                    $('#' + ddl).val(other);

                }

            }
        });
    }
    function getItems(Id, method) {
        debugger
        var val = Id;
        $.ajax({
            type: "GET",
            url: "/DropdownBind/" + method + "?Id=" + val,
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                console.log(data);
                if (method == 'JsonGetBank') {
                    $("#bankId").val(data.bankId);
                    $("#BankNameId").val(data.BankNameId);
                    $("#BankAccountNumber").val(data.BankAccountNumber);
                    $("#BankCompanyName").val(data.BankCompanyName);
                    $("#BankIFSCCode").val(data.BankIFSCCode);
                    $("#BankBranchName").val(data.BankBranchName);

                    $("#BankCancelledChequeFileName").val(data.BankCancelledChequeFileName);
                    if (data.BankCancelledChequeFileName != null || data.BankCancelledChequeFileName != "") {
                        $("#conBankImg").prop("src", $("#Path").val() + "/Banks/" + data.BankCancelledChequeFileName);
                    }
                    
                    $("#IsDefault").prop("checked", data.IsDefault);
                    $("#BankAccount").show();
                }
                else {
   
                    $("#ContactId").val(data.ContactId);
                    $("#ConAdhaarFileName").val(data.ConAdhaarFileName);
                    $("#ConVoterIdFileName").val(data.ConVoterIdFileName);
                    $("#ConPanFileName").val(data.ConPanFileName);
                    $("#ConFirstName").val(data.ConFirstName);
                    $("#ConEmailAddress").val(data.ConEmailAddress);
                    $("#ConLastName").val(data.ConLastName);
                    $("#ConMobileNumber").val(data.ConMobileNumber);
                    $("#ConPanNumber").val(data.ConPanNumber);
                    $("#ConVoterId").val(data.ConVoterId);
                    $("#ConAdhaarNumber").val(data.ConAdhaarNumber);
                    $("#AddressTypeId").val(data.AddressTypeId);
                    $("#ConAdhaarFileName").val(data.ConAdhaarFileName);
                    $("#ConVoterIdFileName").val(data.ConVoterIdFileName);
                    $("#ConPanFileName").val(data.ConPanFileName);
                    if (data.ConAdhaarFileName != null || data.ConAdhaarFileName != "") {
                        $("#conAdhrImg").prop("src", $("#Path").val() + "/ADHRs/" + data.ConAdhaarFileName);
                    }
                    if (data.ConVoterIdFileName != null || data.ConVoterIdFileName != "") {
                        $("#conVoterImg").prop("src", $("#Path").val() + "/VoterIds/" + data.ConVoterIdFileName);
                    }

                    if (data.ConPanFileName != null || data.ConPanFileName != "") {
                        $("#conPanImg").prop("src", $("#Path").val() + "/PanCards/" + data.ConPanFileName);
                    }
                    $("#ContactPerson").show();
                    $("#CountryId").val(data.CountryId);
                    var obj = { value: data.CountryId, Other: data.StateId };
                    AjaxWithValue('BindStateJson', 'StateId', obj);
                    obj.value = data.StateId;
                    obj.Other = data.CityId;
                    AjaxWithValue('BindLocationJson', 'CityId', obj);
                    $("#Address").val(data.Address);
                    $("#Locality").val(data.Locality);
                    $("#NearLocation").val(data.NearLocation);
                    $("#PinNumber").val(data.PinNumber);
                    $("#IsUser").prop("checked", data.IsUser);
                   
                }

            }
        });
    }
</script>
